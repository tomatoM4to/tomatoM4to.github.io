3:I[9275,[],""]
6:I[1343,[],""]
8:I[231,["217","static/chunks/578c2090-c1b891f3b6c746fd.js","675","static/chunks/b563f954-758761ebc4ecc2e7.js","699","static/chunks/8e1d74a4-44e18cb83de8b273.js","779","static/chunks/0e762574-0fedad6633d82a8a.js","231","static/chunks/231-87925b9c7247c60f.js","874","static/chunks/app/%5Bsubject%5D/layout-39e3ee08b07e17b8.js"],""]
4:["subject","database","d"]
5:["post","%5B4%5D-Database-Programming","d"]
0:["Ggd4W6vMAAu-nUgX-lKdS",[[["",{"children":[["subject","database","d"],{"children":[["post","%5B4%5D-Database-Programming","d"],{"children":["__PAGE__?{\"subject\":\"database\",\"post\":\"[4]-Database-Programming\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":[["subject","database","d"],{"children":[["post","%5B4%5D-Database-Programming","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children","$5","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/dd89e605550f760e.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$L7",null],null]},[["$","html",null,{"lang":"ko","children":["$","body",null,{"className":"__className_1e1d11 min-h-screen","children":["$","div",null,{"className":"grid grid-cols-[24rem_1fr] auto-rows-auto","children":[["$","nav",null,{"className":"bg-white w-full h-14 flex items-center justify-between pl-5 pr-5 mb-20 border-b-2 border-b-slate-300 text-2xl fixed","children":[["$","$L8",null,{"href":"/","children":"tomatoM4to's blog"}],["$","div",null,{"className":"hidden lg:flex items-center","children":[["$","input",null,{"type":"text","className":"w-36 h-7 rounded-full border-2 border-black pl-2","placeholder":"search"}],["$","div",null,{"className":"bg-slate-300 h-10 w-0.5 ml-2"}],["$","$L8",null,{"href":"https://github.com/tomatoM4to/tomatoM4to.github.io","className":"p-2 rounded-full hover:bg-gray-300 transition-colors duration-300","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 16 16","className":"text-2xl cursor-pointer","children":["$undefined",[["$","path","0",{"fillRule":"evenodd","clipRule":"evenodd","d":"M7.976 0A7.977 7.977 0 0 0 0 7.976c0 3.522 2.3 6.507 5.431 7.584.392.049.538-.196.538-.392v-1.37c-2.201.49-2.69-1.076-2.69-1.076-.343-.93-.881-1.175-.881-1.175-.734-.489.048-.489.048-.489.783.049 1.224.832 1.224.832.734 1.223 1.859.88 2.3.685.048-.538.293-.88.489-1.076-1.762-.196-3.621-.881-3.621-3.964 0-.88.293-1.566.832-2.153-.05-.147-.343-.978.098-2.055 0 0 .685-.196 2.201.832.636-.196 1.322-.245 2.007-.245s1.37.098 2.006.245c1.517-1.027 2.202-.832 2.202-.832.44 1.077.146 1.908.097 2.104a3.16 3.16 0 0 1 .832 2.153c0 3.083-1.86 3.719-3.62 3.915.293.244.538.733.538 1.467v2.202c0 .196.146.44.538.392A7.984 7.984 0 0 0 16 7.976C15.951 3.572 12.38 0 7.976 0z","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}],["$","button",null,{"className":"p-2 rounded-full hover:bg-gray-300 transition-colors duration-300","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 24 24","className":"text-2xl cursor-pointer","children":["$undefined",[["$","path","0",{"fill":"none","strokeWidth":"2","d":"M12,23 C18.0751322,23 23,18.0751322 23,12 C23,5.92486775 18.0751322,1 12,1 C5.92486775,1 1,5.92486775 1,12 C1,18.0751322 5.92486775,23 12,23 Z M12,23 C15,23 16,18 16,12 C16,6 15,1 12,1 C9,1 8,6 8,12 C8,18 9,23 12,23 Z M2,16 L22,16 M2,8 L22,8","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}],["$","button",null,{"className":"p-2 rounded-full hover:bg-gray-300 transition-colors duration-300","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 16 16","className":"text-2xl cursor-pointer","children":["$undefined",[["$","path","0",{"d":"M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278","children":[]}],["$","path","1",{"d":"M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.73 1.73 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.73 1.73 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.73 1.73 0 0 0 1.097-1.097zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}]]}]]}],["$","main",null,{"className":"col-span-2","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ea9287ddd32ae283.css","precedence":"next","crossOrigin":"$undefined"}]]}]}]]}]}]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/40f13b8fccf4d106.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/10abd2b3b9bafb32.css","precedence":"next","crossOrigin":"$undefined"}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=yes"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"tomatom4to's Computer Science Blog"}],["$","meta","3",{"name":"description","content":"Comprehensive computer science knowledge covering OS, Database, AI, Networks, Linux, and Docker. Learn computer science concepts with clear explanations and practical examples."}],["$","meta","4",{"name":"author","content":"tomatom4to"}],["$","meta","5",{"name":"keywords","content":"Computer Science,Operating Systems,Database,AI,Network,Linux,Docker,Programming,Software Development"}],["$","meta","6",{"name":"creator","content":"tomatom4to"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","9",{"rel":"canonical","href":"https://tomatom4to.github.io"}],["$","meta","10",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","11",{"property":"og:title","content":"tomatom4to's Computer Science Blog"}],["$","meta","12",{"property":"og:description","content":"Your gateway to comprehensive computer science knowledge and practical programming skills"}],["$","meta","13",{"property":"og:url","content":"https://tomatom4to.github.io"}],["$","meta","14",{"property":"og:site_name","content":"tomatom4to's CS Blog"}],["$","meta","15",{"property":"og:locale","content":"ko_KR"}],["$","meta","16",{"property":"og:type","content":"website"}],["$","meta","17",{"name":"twitter:card","content":"summary"}],["$","meta","18",{"name":"twitter:title","content":"tomatom4to's Computer Science Blog"}],["$","meta","19",{"name":"twitter:description","content":"Your gateway to comprehensive computer science knowledge and practical programming skills"}],["$","link","20",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","21",{"name":"next-size-adjust"}]]
1:null
a:I[1815,["217","static/chunks/578c2090-c1b891f3b6c746fd.js","675","static/chunks/b563f954-758761ebc4ecc2e7.js","699","static/chunks/8e1d74a4-44e18cb83de8b273.js","779","static/chunks/0e762574-0fedad6633d82a8a.js","231","static/chunks/231-87925b9c7247c60f.js","874","static/chunks/app/%5Bsubject%5D/layout-39e3ee08b07e17b8.js"],"Hamburger"]
7:["$","div",null,{"className":"flex","children":[["$","$La",null,{"res":[{"isOutLine":false,"firstOrder":1,"secondOrder":-1,"order":"1","title":"Introduction","originalName":"[1]-Introduction"},{"isOutLine":false,"firstOrder":2,"secondOrder":-1,"order":"2","title":"Relational data model","originalName":"[2]-Relational-data-model"},{"isOutLine":true,"firstOrder":2,"secondOrder":1,"order":"2-1","title":"Relational algebra","originalName":"[2-1]-Relational-algebra"},{"isOutLine":false,"firstOrder":3,"secondOrder":-1,"order":"3","title":"SQL concept","originalName":"[3]-SQL-concept"},{"isOutLine":true,"firstOrder":3,"secondOrder":1,"order":"3-1","title":"Create table","originalName":"[3-1]-Create-table"},{"isOutLine":true,"firstOrder":3,"secondOrder":2,"order":"3-2","title":"Integreity Constraint","originalName":"[3-2]-Integreity-Constraint"},{"isOutLine":true,"firstOrder":3,"secondOrder":3,"order":"3-3","title":"Query","originalName":"[3-3]-Query"},{"isOutLine":true,"firstOrder":3,"secondOrder":4,"order":"3-4","title":"View","originalName":"[3-4]-View"},{"isOutLine":true,"firstOrder":3,"secondOrder":5,"order":"3-5","title":"Index","originalName":"[3-5]-Index"},{"isOutLine":false,"firstOrder":4,"secondOrder":-1,"order":"4","title":"Database Programming","originalName":"[4]-Database-Programming"},{"isOutLine":false,"firstOrder":5,"secondOrder":-1,"order":"5","title":"web","originalName":"[5]-web"},{"isOutLine":false,"firstOrder":6,"secondOrder":-1,"order":"6","title":"Normalization","originalName":"[6]-Normalization"},{"isOutLine":false,"firstOrder":7,"secondOrder":-1,"order":"7","title":"Transaction","originalName":"[7]-Transaction"},{"isOutLine":false,"firstOrder":99,"secondOrder":-1,"order":"99","title":"all in one","originalName":"[99]-all-in-one"}],"params":{"subject":"database"}}],["$","aside",null,{"className":"hidden lg:flex w-64 2xl:w-96 flex-col h-screen border-r-2 border-gray-300 mt-14 p-1 pl-5 fixed overflow-y-auto overscroll-contain","children":[["$","$L8",null,{"href":"/database/[1]-Introduction","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["1",". ","Introduction"]}],["$","$L8",null,{"href":"/database/[2]-Relational-data-model","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["2",". ","Relational data model"]}],["$","$L8",null,{"href":"/database/[2-1]-Relational-algebra","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["2-1",". ","Relational algebra"]}],["$","$L8",null,{"href":"/database/[3]-SQL-concept","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["3",". ","SQL concept"]}],["$","$L8",null,{"href":"/database/[3-1]-Create-table","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["3-1",". ","Create table"]}],["$","$L8",null,{"href":"/database/[3-2]-Integreity-Constraint","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["3-2",". ","Integreity Constraint"]}],["$","$L8",null,{"href":"/database/[3-3]-Query","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["3-3",". ","Query"]}],["$","$L8",null,{"href":"/database/[3-4]-View","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["3-4",". ","View"]}],["$","$L8",null,{"href":"/database/[3-5]-Index","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["3-5",". ","Index"]}],["$","$L8",null,{"href":"/database/[4]-Database-Programming","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["4",". ","Database Programming"]}],["$","$L8",null,{"href":"/database/[5]-web","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["5",". ","web"]}],["$","$L8",null,{"href":"/database/[6]-Normalization","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["6",". ","Normalization"]}],["$","$L8",null,{"href":"/database/[7]-Transaction","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["7",". ","Transaction"]}],["$","$L8",null,{"href":"/database/[99]-all-in-one","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["99",". ","all in one"]}]]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]}]
2:["$","div",null,{"className":"lg:ml-64 2xl:ml-96 mt-32 mb-32 flex-1 flex flex-col items-center overflow-x-hidden","children":["$","div",null,{"className":"w-11/12 md:w-3/4 lg:w-2/3 2xl:w-1/2 markdown-body","children":[["$","p",null,{"children":"가장 중요한 파트고 사실 이전에 배운것들은 거의 사용하지 않음, 실무에선 사실상 5장 내용만 함"}],"\n",["$","h1",null,{"children":"프로그래밍 VS Databae Programming"}],"\n",["$","p",null,{"children":"SQL을 사용안다라는 하나의 차이지만 100%다른 차이가 있음"}],"\n",["$","p",null,{"children":"그렇다면 지금까지 우리가 배운 SQL은 DB proramminng이 아니냐? DB programming이 맞다. 핮만 여기서 말하고자 하는것은 응용프로그램 상에서 실행이 돼고 일반인들도 사용 가능하겠금 하는것이다."}],"\n",["$","p",null,{"children":"보통 Python 같은 언어에서 SQL을 사용한다 해서 Embeded Programming 라고 하기도 하다."}],"\n",["$","p",null,{"children":"사실 Python 상에서 SQL을 조작하는것이 대부분적인 개발자의 방식이다."}],"\n",["$","h2",null,{"children":"DB Programming 방법"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"SQL 쓰기"}],"\n",["$","li",null,{"children":"Oracle은 SQL에 for문 if문을 사용 가능하겟금 해주는 SQL의 확장판인 PL/SQL을 사용, 다른 DBMS에서도 전부 이런것들이 반드시 있음"}],"\n",["$","li",null,{"children":"일바언어로 만들어진 응용 프로그럄에서 데이터베이스 관리, 검색\n4, 4GL 사용, DB만 주로 처리하는 전용 프로그램인데, 90년대 웹 이전 시대에 많이썼지 지금은 거의 사장"}],"\n"],"className":"list-decimal ml-4"}],"\n",["$","h2",null,{"children":"방법"}],"\n",["$","p",null,{"children":"이 이외의 DB 프로그래밍은 거의 없음"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"유닉스: 요즘 거의 사장"}],"\n",["$","li",null,{"children":"하드웨어 계층: 겁나 큰 컴퓨터 서버 예기임, 요즘  일반 CPU, 클라우드가 너무 좋앚서 거의 사장"}],"\n"],"className":"list-disc ml-4"}],"\n",["$","hr",null,{"className":"border-t-4 border-gray-300 mt-10 mb-10","children":"$undefined"}],"\n",["$","h1",null,{"children":"PL/SQL"}],"\n",["$","p",null,{"children":"이름ㅇ서 알수 있듯 일반 프로그래밍 언어처럼 절차식 언어다. 우리가 지금까지 작성한 SQL은 Non Procedure 식 언어였다."}],"\n",["$","p",null,{"children":"절차식 언어는 컴파일을 하든 인터프리터가 해석을 하든 하여튼 이것도 해석이 필요하다 일단"}],"\n",["$","p",null,{"children":"작성은 일반적인 GUI 시스템에서 작성하면 됀다. 그리고 해당 GUI 프로그램이 컴파일해서 오라클에게 준다 오라클 DBMS는 기본적으로 Procedural 기능이 없다. GUI 상에서 실행하는 질의다."}],"\n",["$","h2",null,{"children":"프로시저"}],"\n",["$","p",null,{"children":"GUI 프로그램에서 확인 가능한 객체이기도 하다. 사실 pl/SQL만 책 한권이 나온다."}],"\n",["$","p",null,{"children":"일반적인 언어에서 함수와 프로시저의 차이를 이해해야 한다."}],"\n",["$","p",null,{"children":"함수는 먼갈 받아 처리해 return 하는거라면, 프로시저는 return이 없다. 그냥 쓰는거지 자바, 파이썬에는 없고 C에만 있다 한다. 없다 뿐이지 구분은 한닥 한다?"}],"\n",["$","p",null,{"children":"함수든 프로시저든 결국 코드 제사용성을 위한 방법이다."}],"\n",["$","p",null,{"children":"이제 Oracle로 넘어가면 Oracle은 db다. DB는 프로시저나 함수를 DB에 Table 형태로 저장해 필요하다면 뽑아서 쓸 수 있다. 이를 Stored function, Stored Procudured 라 한다. 그래서 프로시저나 함수를 저장하면 GUI에 기록이 됀것을 볼 수 있다. 저장만 한다 해서 쓸 수 있는건 아니고 사용하려면 나중에 불러야 한다."}],"\n",["$","p",null,{"children":"이러한 PSQL을 쓰거나 배우는 궁극적인 이유는 바로 ㅍ로시저나 함수를 저장했다 나중에 사용하는거다."}],"\n",["$","h2",null,{"children":"문법"}],"\n",["$","p",null,{"children":"없으면 만들고 있으면 대체"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-sql","children":"CREATE OR REPLACE PROCEDURE BookInsertOrUpdate (\n  p_book_id NUMBER,\n  title VARCHAR2,\n  author VARCHAR2,\n  price NUMBER\n)\nAS\n  mycount NUMBER; -- INTO: mycount라는 local변수에다가 바인딩함\nBEGIN\n  SELECT COUNT(*) INTO mycount FROM Book WHERE p_book_id = book_id;\n  IF mycount = 0 THEN\n    INSERT INTO Book VALUES (p_book_id, title, author, price);\n  ELSE\n    UPDATE Book SET title = title, author = author, price = price WHERE book_id = p_book_id;\n  END IF;\nEND;\n"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"프로시저 실행, 참고로 위 예제는 저장 프로시전데, return값이 없음, ExEC도 PL/SQL 전용이라 실행이 안됀다고? 뭔소리지"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-sql","children":"-- 1. EXECUTE 명령어를 사용한 실행 (가장 간단한 방법)\nEXECUTE BookInsertOrUpdate(1, '오라클 기초', '김철수', 25000);\n\n-- 2. EXEC 명령어 사용 (EXECUTE의 축약형)\nEXEC BookInsertOrUpdate(2, '자바 프로그래밍', '이영희', 30000);\n\n-- 3. BEGIN-END 블록을 사용한 실행\nBEGIN\n  BookInsertOrUpdate(3, '파이썬 입문', '박지민', 28000);\nEND;\n/\n\n-- 4. 변수를 사용한 실행\nDECLARE\n  v_book_id NUMBER := 4;\n  v_title VARCHAR2(100) := '데이터베이스 개론';\n  v_author VARCHAR2(100) := '최동훈';\n  v_price NUMBER := 32000;\nBEGIN\n  BookInsertOrUpdate(v_book_id, v_title, v_author, v_price);\nEND;\n"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"RETURN"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-sql","children":"CREATE OR REPLACE PROCEDURE BookInsertOrUpdate (\n  p_book_id IN NUMBER,         -- 입력 매개변수 IN 명시\n  p_title IN VARCHAR2,\n  p_author IN VARCHAR2,\n  p_price IN NUMBER,\n  p_result OUT VARCHAR2,       -- 처리 결과를 반환할 OUT 매개변수\n  p_error_msg OUT VARCHAR2     -- 오류 메시지를 반환할 OUT 매개변수\n)\nAS\n  v_count NUMBER;\nBEGIN\n  -- 초기화\n  p_result := 'SUCCESS';\n  p_error_msg := NULL;\n\n  -- 도서 존재 여부 확인\n  SELECT COUNT(*) INTO v_count\n  FROM Book\n  WHERE book_id = p_book_id;\n\n  -- 도서가 없으면 INSERT\n  IF v_count = 0 THEN\n    INSERT INTO Book VALUES (p_book_id, p_title, p_author, p_price);\n    p_result := 'INSERT_SUCCESS';\n\n  -- 도서가 있으면 UPDATE\n  ELSE\n    UPDATE Book\n    SET title = p_title,\n        author = p_author,\n        price = p_price\n    WHERE book_id = p_book_id;\n    p_result := 'UPDATE_SUCCESS';\n  END IF;\nEND;\n"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"DECLARE BEGIN END: PROceDURE이 없으니 프로시저가 아니다, c언어로 따지면 main() 함수다. 컴파일에서 저장돼는것도 아니고 그냥 실행이 됀닥 한다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-sql","children":"SET SERVEROUTPUT ON;\n\nDECLARE\n  v_result VARCHAR2(100);\n  v_error_msg VARCHAR2(1000);\nBEGIN\n  BookInsertOrUpdate(1, '오라클 기초', '김철수', 25000, v_result, v_error_msg);\n  DBMS_OUTPUT.PUT_LINE('실행 결과: ' || v_result);\n  DBMS_OUTPUT.PUT_LINE('오류 메시지: ' || v_error_msg);\nEND;\n"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"저장이 안돼면 별로 안쓰려나..?"}],"\n",["$","hr",null,{"className":"border-t-4 border-gray-300 mt-10 mb-10","children":"$undefined"}],"\n",["$","h1",null,{"children":"커서(cursor)"}],"\n",["$","p",null,{"children":"먼저 알아야할것"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"비절차식: SQL: 결과가 집합(테이블)임, 컨트롤 할수 없음"}],"\n",["$","li",null,{"children":"절차식: PL/SQL: 줄단위"}],"\n"],"className":"list-disc ml-4"}],"\n",["$","p",null,{"children":"그리고 절차식으로 나온 결과인 줄단위 결과를 한줄한줄 처리하기 위한 개념이 cursor이다."}],"\n",["$","p",null,{"children":"한줄한줄씩 가리킨다 라는 개념"}],"\n",["$","p",null,{"children":"예제"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-SQL","children":"CReATE OR REPLACE PROCEDURE Interest  --파라미터가 없어 괄호 생략\nAS\n  val NUMERIC;  --NUMBER의 또다른 표현\n  price NUMERIC;\n  CURSOR InterestCursor Is SELECt saleprice FROM Orders;  --속성이 하나인 테이블이 return 됄텐데 그중 첫번째 튜플을 가르키는 InterestCursor을 정의\nBEGIN\n  val := 0.0  --변수 초기화임, parscal 스타일이라고 한다.. 왜냐면 = 이게 SQL에선 비교문이라서\n  OPEN InterestCursor;  --해당 커서를 실행함, 이제 Orders 테이블에서 saleprice를 읽고 첫번째 튜플을 가르킴, 실제로 테이블이 넘어오고 어딘가에 저장이 돼 가르킨다 한다.\n\n  LOOP\n    FETCH InterestCursor INTO Price;  --첫번째 튜플을 읽고 Price에 바인딩, 근데 만약 값이 하나가 아니라 튜플이라면? 따로 튜플을 저장하는 타입이 있음, FETCH를 할때마다 알아서 다음 튜플로 넘어간다 한다.\n    EXIT WHEN InterestCursor%NOTFOUND  --커서가 쭉 돌다가 없다면, NOTFOUND를 리턴한다 고 한다. 이걸 체크하고 loop 종료\n\n    IF Price >= 10000 THEN\n      val := val + Price * 0.1\n    ELSE\n      val := val + price *  0.05\n    END IF;\n  END LOOP;\n  CLOSE InterestCursor;  --반드시 커서를 종료해야함\n  DBMS_OUTPUT_PUT_LINE('전체 이익 금액 = ' || val);\nEND;\n"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"PL/SQL --> oracle --> hdd,ssd"}],"\n",["$","p",null,{"children":"pL/SQL < oracle, 결과로 테이블이옴, cursor라는 놈은 해당 테이블이 첫번째 튜플을 가리킴, 그리고 다시 다음줄로 감"}],"\n",["$","hr",null,{"className":"border-t-4 border-gray-300 mt-10 mb-10","children":"$undefined"}],"\n",["$","h1",null,{"children":"사용자 정의 함수"}],"\n",["$","p",null,{"children":"return 쓰는거 빼면 거의 비슷함, 이건 컴파일? 예기는 없고 그냥 실행하면 function 공간에 저장됀다 함"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-SQL","children":"CREATE OR REPLACE FUNCTION fn (\n  val number\n) RETURN INT\nIS\n  val2 nNUMBER;\nBEGIN\n  IF val > 10000\n    THEN val2 := val * 0.1;\n  ELSE\n    val2 := val * 0.05;\n  END IF;\n  RETURN val2;\nEND;\n"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"쓰는법, 특징은 프로시저처럼 EXEC가 필요 없이 바로 쓸수 있음, 사실상 내장함수(sum, avg) 같은것의 확장이기 때문에, 굉장히 유용함"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-sql","children":"SELECT fn(price) FROM Orders;\n"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","hr",null,{"className":"border-t-4 border-gray-300 mt-10 mb-10","children":"$undefined"}],"\n",["$","h1",null,{"children":"trigger"}],"\n",["$","p",null,{"children":"제약조건을 확장하는것, INSERT, DELETE, UPDATE문이 실행될때 자동으로 실행되는 프로시저임, INSERT, DELETE, UPDATE문은 굉장히 중요한 거니.."}],"\n",["$","p",null,{"children":"그리고 해당 SQL 실행전, 실행 후 에 실행할지 결정도 가능"}],"\n",["$","p",null,{"children":"생성, 이것도 실행하면 TRIGGER 테이블에 들어감, 아래 예제는 백업테이블에 로깅하는것, 먼저 실행돼게 할수 있음 DBMS가 알아서 해줌, AFTER를훨씬 많이 씀"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-sql","children":"-- Book 테이블의 INSERT 트리거 생성\nCREATE OR REPLACE TRIGGER afterInsertBook  -- 트리거 이름 정의\nAFTER INSERT                              -- 트리거 발생 시점 (INSERT 이후)\nON Book                                   -- 트리거를 부착할 테이블\nFOR EACH ROW                              -- 각 행마다 트리거 실행 (행 레벨 트리거)\nDECLARE\n    val NUMBER;                           -- 트리거 내에서 사용할 지역 변수\nBEGIN\n    -- Book 테이블에 INSERT가 발생할 때마다 로그 테이블에 기록\n    -- :new는 방금 삽입된 새로운 행의 데이터를 참조\n    INSERT INTO book_log VALUE(:new.book_id, ...);\n\n    -- 트리거 실행 확인을 위한 메시지 출력\n    DBMS_OUTPUT.PUT_LINE('INSERTED');\nEND;\n"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"봐야할건 :new. 와 :old?임 현재 들어온 값이 :new이고 이전값이 :old임 위 예제론 INSert INTO Book VALUES(14, 'aa', 'asd', 10);\n에서 14가 돼겠지, UPdaTE 할때 많이 씀"}],"\n",["$","p",null,{"children":"당연한거긴 하는데.. 자바든 파이썬이든 INSERT 하면 실행 됨"}]]}]}]
