3:I[9275,[],""]
6:I[1343,[],""]
8:I[231,["217","static/chunks/578c2090-c1b891f3b6c746fd.js","675","static/chunks/b563f954-758761ebc4ecc2e7.js","699","static/chunks/8e1d74a4-44e18cb83de8b273.js","779","static/chunks/0e762574-0fedad6633d82a8a.js","231","static/chunks/231-87925b9c7247c60f.js","874","static/chunks/app/%5Bsubject%5D/layout-39e3ee08b07e17b8.js"],""]
4:["subject","pytorch","d"]
5:["post","%5B3-1%5D-Initialzation","d"]
0:["P4D4DIuAWBh0ia01yKSNU",[[["",{"children":[["subject","pytorch","d"],{"children":[["post","%5B3-1%5D-Initialzation","d"],{"children":["__PAGE__?{\"subject\":\"pytorch\",\"post\":\"[3-1]-Initialzation\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":[["subject","pytorch","d"],{"children":[["post","%5B3-1%5D-Initialzation","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children","$5","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/dd89e605550f760e.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$L7",null],null]},[["$","html",null,{"lang":"ko","children":["$","body",null,{"className":"__className_1e1d11 min-h-screen","children":["$","div",null,{"className":"grid grid-cols-[24rem_1fr] auto-rows-auto","children":[["$","nav",null,{"className":"bg-white w-full h-14 flex items-center justify-between pl-5 pr-5 mb-20 border-b-2 border-b-slate-300 text-2xl fixed","children":[["$","$L8",null,{"href":"/","children":"tomatoM4to's blog"}],["$","div",null,{"className":"hidden lg:flex items-center","children":[["$","input",null,{"type":"text","className":"w-36 h-7 rounded-full border-2 border-black pl-2","placeholder":"search"}],["$","div",null,{"className":"bg-slate-300 h-10 w-0.5 ml-2"}],["$","$L8",null,{"href":"https://github.com/tomatoM4to/tomatoM4to.github.io","className":"p-2 rounded-full hover:bg-gray-300 transition-colors duration-300","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 16 16","className":"text-2xl cursor-pointer","children":["$undefined",[["$","path","0",{"fillRule":"evenodd","clipRule":"evenodd","d":"M7.976 0A7.977 7.977 0 0 0 0 7.976c0 3.522 2.3 6.507 5.431 7.584.392.049.538-.196.538-.392v-1.37c-2.201.49-2.69-1.076-2.69-1.076-.343-.93-.881-1.175-.881-1.175-.734-.489.048-.489.048-.489.783.049 1.224.832 1.224.832.734 1.223 1.859.88 2.3.685.048-.538.293-.88.489-1.076-1.762-.196-3.621-.881-3.621-3.964 0-.88.293-1.566.832-2.153-.05-.147-.343-.978.098-2.055 0 0 .685-.196 2.201.832.636-.196 1.322-.245 2.007-.245s1.37.098 2.006.245c1.517-1.027 2.202-.832 2.202-.832.44 1.077.146 1.908.097 2.104a3.16 3.16 0 0 1 .832 2.153c0 3.083-1.86 3.719-3.62 3.915.293.244.538.733.538 1.467v2.202c0 .196.146.44.538.392A7.984 7.984 0 0 0 16 7.976C15.951 3.572 12.38 0 7.976 0z","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}],["$","button",null,{"className":"p-2 rounded-full hover:bg-gray-300 transition-colors duration-300","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 24 24","className":"text-2xl cursor-pointer","children":["$undefined",[["$","path","0",{"fill":"none","strokeWidth":"2","d":"M12,23 C18.0751322,23 23,18.0751322 23,12 C23,5.92486775 18.0751322,1 12,1 C5.92486775,1 1,5.92486775 1,12 C1,18.0751322 5.92486775,23 12,23 Z M12,23 C15,23 16,18 16,12 C16,6 15,1 12,1 C9,1 8,6 8,12 C8,18 9,23 12,23 Z M2,16 L22,16 M2,8 L22,8","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}],["$","button",null,{"className":"p-2 rounded-full hover:bg-gray-300 transition-colors duration-300","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 16 16","className":"text-2xl cursor-pointer","children":["$undefined",[["$","path","0",{"d":"M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278","children":[]}],["$","path","1",{"d":"M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.73 1.73 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.73 1.73 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.73 1.73 0 0 0 1.097-1.097zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.16 1.16 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.16 1.16 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732z","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}]]}]]}],["$","main",null,{"className":"col-span-2","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ea9287ddd32ae283.css","precedence":"next","crossOrigin":"$undefined"}]]}]}]]}]}]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/40f13b8fccf4d106.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/10abd2b3b9bafb32.css","precedence":"next","crossOrigin":"$undefined"}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=yes"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"tomatom4to's Computer Science Blog"}],["$","meta","3",{"name":"description","content":"Comprehensive computer science knowledge covering OS, Database, AI, Networks, Linux, and Docker. Learn computer science concepts with clear explanations and practical examples."}],["$","meta","4",{"name":"author","content":"tomatom4to"}],["$","meta","5",{"name":"keywords","content":"Computer Science,Operating Systems,Database,AI,Network,Linux,Docker,Programming,Software Development"}],["$","meta","6",{"name":"creator","content":"tomatom4to"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","9",{"rel":"canonical","href":"https://tomatom4to.github.io"}],["$","meta","10",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","11",{"property":"og:title","content":"tomatom4to's Computer Science Blog"}],["$","meta","12",{"property":"og:description","content":"Your gateway to comprehensive computer science knowledge and practical programming skills"}],["$","meta","13",{"property":"og:url","content":"https://tomatom4to.github.io"}],["$","meta","14",{"property":"og:site_name","content":"tomatom4to's CS Blog"}],["$","meta","15",{"property":"og:locale","content":"ko_KR"}],["$","meta","16",{"property":"og:type","content":"website"}],["$","meta","17",{"name":"twitter:card","content":"summary"}],["$","meta","18",{"name":"twitter:title","content":"tomatom4to's Computer Science Blog"}],["$","meta","19",{"name":"twitter:description","content":"Your gateway to comprehensive computer science knowledge and practical programming skills"}],["$","link","20",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","21",{"name":"next-size-adjust"}]]
1:null
a:I[1815,["217","static/chunks/578c2090-c1b891f3b6c746fd.js","675","static/chunks/b563f954-758761ebc4ecc2e7.js","699","static/chunks/8e1d74a4-44e18cb83de8b273.js","779","static/chunks/0e762574-0fedad6633d82a8a.js","231","static/chunks/231-87925b9c7247c60f.js","874","static/chunks/app/%5Bsubject%5D/layout-39e3ee08b07e17b8.js"],"Hamburger"]
7:["$","div",null,{"className":"flex","children":[["$","$La",null,{"res":[{"isOutLine":false,"firstOrder":1,"secondOrder":-1,"order":"1","title":"Introduction","originalName":"[1]-Introduction"},{"isOutLine":false,"firstOrder":2,"secondOrder":-1,"order":"2","title":"Install","originalName":"[2]-Install"},{"isOutLine":false,"firstOrder":3,"secondOrder":-1,"order":"3","title":"Tensors","originalName":"[3]-Tensors"},{"isOutLine":true,"firstOrder":3,"secondOrder":1,"order":"3-1","title":"Initialzation","originalName":"[3-1]-Initialzation"},{"isOutLine":true,"firstOrder":3,"secondOrder":2,"order":"3-2","title":"Operations","originalName":"[3-2]-Operations"},{"isOutLine":true,"firstOrder":3,"secondOrder":3,"order":"3-3","title":"Manipulations","originalName":"[3-3]-Manipulations"},{"isOutLine":false,"firstOrder":4,"secondOrder":-1,"order":"4","title":"Autograd","originalName":"[4]-Autograd"},{"isOutLine":true,"firstOrder":4,"secondOrder":1,"order":"4-1","title":"Operations","originalName":"[4-1]-Operations"},{"isOutLine":true,"firstOrder":4,"secondOrder":2,"order":"4-2","title":"Example","originalName":"[4-2]-Example"},{"isOutLine":false,"firstOrder":5,"secondOrder":-1,"order":"5","title":"Data preparation","originalName":"[5]-Data-preparation"},{"isOutLine":false,"firstOrder":6,"secondOrder":-1,"order":"6","title":"Neural Network","originalName":"[6]-Neural-Network"},{"isOutLine":true,"firstOrder":6,"secondOrder":1,"order":"6-1","title":"Layer","originalName":"[6-1]-Layer"},{"isOutLine":true,"firstOrder":6,"secondOrder":2,"order":"6-2","title":"Non linear Activation","originalName":"[6-2]-Non-linear-Activation"},{"isOutLine":true,"firstOrder":6,"secondOrder":3,"order":"6-3","title":"Model","originalName":"[6-3]-Model"},{"isOutLine":true,"firstOrder":6,"secondOrder":4,"order":"6-4","title":"Parameter","originalName":"[6-4]-Parameter"}],"params":{"subject":"pytorch"}}],["$","aside",null,{"className":"hidden lg:flex w-64 2xl:w-96 flex-col h-screen border-r-2 border-gray-300 mt-14 p-1 pl-5 fixed overflow-y-auto overscroll-contain","children":[["$","$L8",null,{"href":"/pytorch/[1]-Introduction","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["1",". ","Introduction"]}],["$","$L8",null,{"href":"/pytorch/[2]-Install","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["2",". ","Install"]}],["$","$L8",null,{"href":"/pytorch/[3]-Tensors","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["3",". ","Tensors"]}],["$","$L8",null,{"href":"/pytorch/[3-1]-Initialzation","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["3-1",". ","Initialzation"]}],["$","$L8",null,{"href":"/pytorch/[3-2]-Operations","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["3-2",". ","Operations"]}],["$","$L8",null,{"href":"/pytorch/[3-3]-Manipulations","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["3-3",". ","Manipulations"]}],["$","$L8",null,{"href":"/pytorch/[4]-Autograd","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["4",". ","Autograd"]}],["$","$L8",null,{"href":"/pytorch/[4-1]-Operations","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["4-1",". ","Operations"]}],["$","$L8",null,{"href":"/pytorch/[4-2]-Example","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["4-2",". ","Example"]}],["$","$L8",null,{"href":"/pytorch/[5]-Data-preparation","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["5",". ","Data preparation"]}],["$","$L8",null,{"href":"/pytorch/[6]-Neural-Network","className":"undefined px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["6",". ","Neural Network"]}],["$","$L8",null,{"href":"/pytorch/[6-1]-Layer","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["6-1",". ","Layer"]}],["$","$L8",null,{"href":"/pytorch/[6-2]-Non-linear-Activation","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["6-2",". ","Non linear Activation"]}],["$","$L8",null,{"href":"/pytorch/[6-3]-Model","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["6-3",". ","Model"]}],["$","$L8",null,{"href":"/pytorch/[6-4]-Parameter","className":"pl-4 px-2 py-1 mb-1 hover:bg-gray-300 transition-colors rounded-lg","onClick":"$undefined","children":["6-4",". ","Parameter"]}]]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]}]
2:["$","div",null,{"className":"lg:ml-64 2xl:ml-96 mt-32 mb-32 flex-1 flex flex-col items-center overflow-x-hidden","children":["$","div",null,{"className":"w-11/12 md:w-3/4 lg:w-2/3 2xl:w-1/2 markdown-body","children":[["$","p",null,{"children":"TODO: 출력값들 정리"}],"\n",["$","h1",null,{"children":"Tensor"}],"\n",["$","p",null,{"children":"텐서에 대해 초기화도 해보기도 하고 데이터 타입도 해보기도 하겠습니다."}],"\n",["$","hr",null,{"className":"border-t-4 border-gray-300 mt-10 mb-10","children":"$undefined"}],"\n",["$","h1",null,{"children":"텐서 초기화"}],"\n",["$","p",null,{"children":"데이터의 기본단위인 텐서를 초기화 하는 방법은 자유롭게 할수 있을 정도로 숙지해야 합니다. 이번에는 텐서를 초기화 하는 방법에 대해 알아보겠습니다."}],"\n",["$","h2",null,{"children":"초기화 되지 않은 텐서"}],"\n",["$","p",null,{"children":"빠르게 텐서를 불러올수 있는 방법입니다. 이렇게 초기화 되지 않은 텐서를 만들면, 그 시점에 메모리에 존재하던 데이터가 들어가게 됩니다. 출력을 해보시 이상한 값이 나올겁니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nx ",["$","span",null,{"className":"pl-k","children":"="}]," torch.empty(",["$","span",null,{"className":"pl-c1","children":"4"}],", ",["$","span",null,{"className":"pl-c1","children":"2"}],") ",["$","span",null,{"className":"pl-c","children":"# 4x2 초기화 되지 않은 텐서 생성"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x)\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"출력 결과"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":"$undefined"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","h2",null,{"children":"무작위로 초기화된 텐서"}],"\n",["$","p",null,{"children":"랜덤의 줄임인 rand를 사용해서 무작위로 초기화된 텐서를 만들수 있습니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nx ",["$","span",null,{"className":"pl-k","children":"="}]," torch.rand(",["$","span",null,{"className":"pl-c1","children":"4"}],", ",["$","span",null,{"className":"pl-c1","children":"2"}],") ",["$","span",null,{"className":"pl-c","children":"# 4x2 무작위로 초기화된 텐서 생성"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x)\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"출력 결과"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":"$undefined"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","h2",null,{"children":"데이터 타입(dtype)이 long 이면서 0으로 채워진 텐서"}],"\n",["$","p",null,{"children":["0이기 때문에 ",["$","code",null,{"children":"zeros","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 메서드를 사용하구요, 데이터 타입이 long이기 때문에 ",["$","code",null,{"children":"dtype=torch.long","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}],"을 사용합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nx ",["$","span",null,{"className":"pl-k","children":"="}]," torch.zeros(",["$","span",null,{"className":"pl-c1","children":"4"}],", ",["$","span",null,{"className":"pl-c1","children":"2"}],", ",["$","span",null,{"className":"pl-v","children":"dtype"}],["$","span",null,{"className":"pl-k","children":"="}],"torch.long) ",["$","span",null,{"className":"pl-c","children":"# 4x2 0으로 채워진 long 타입 텐서 생성"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x)\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"출력 결과"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":"$undefined"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"출력해보면 long 이기 때문에 소수점이 없는 정수 값이 나옵니다."}],"\n",["$","h2",null,{"children":"사용자가 입력한 값으로 텐서 초기화"}],"\n",["$","p",null,{"children":["사용자가 입력한 값으로 텐서를 초기화 할수 있습니다. 이때는 ",["$","code",null,{"children":"torch.tensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}],"를 사용합니다. 그냥 수기로 입력하면 됩니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nx ",["$","span",null,{"className":"pl-k","children":"="}]," torch.tensor([",["$","span",null,{"className":"pl-c1","children":"5.5"}],", ",["$","span",null,{"className":"pl-c1","children":"3"}],"]) ",["$","span",null,{"className":"pl-c","children":"# 5.5, 3 으로 초기화된 1차원 텐서 생성"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x)\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"출력을 해보시면 정수인 3을 넣었지만 타입이 실수인 형태로 생성되는걸 알수 있습니다."}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"출력 결과"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":"$undefined"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","h2",null,{"children":"2 * 4크기, double 타입, 1로 채워진 텐서"}],"\n",["$","p",null,{"children":["1로 채워진 텐서를 만들어보겠습니다. 이때는 ",["$","code",null,{"children":"torch.ones","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}],"를 사용합니다. 데이터 타입이 double이기 때문에 ",["$","code",null,{"children":"dtype=torch.double","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}],"을 사용합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nx ",["$","span",null,{"className":"pl-k","children":"="}]," torch.ones(",["$","span",null,{"className":"pl-c1","children":"2"}],", ",["$","span",null,{"className":"pl-c1","children":"4"}],", ",["$","span",null,{"className":"pl-v","children":"dtype"}],["$","span",null,{"className":"pl-k","children":"="}],"torch.double) ",["$","span",null,{"className":"pl-c","children":"# 2x4 1로 채워진 double 타입 텐서 생성"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x)\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"출력 결과"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":"$undefined"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"근데 갑자기 텐서를 바꿔보고 싶다면 어떻게 할까요, 이렇게 할수 있습니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":["x ",["$","span",null,{"className":"pl-k","children":"="}]," x.new_ones(",["$","span",null,{"className":"pl-c1","children":"5"}],", ",["$","span",null,{"className":"pl-c1","children":"3"}],", ",["$","span",null,{"className":"pl-v","children":"dtype"}],["$","span",null,{"className":"pl-k","children":"="}],"torch.double) ",["$","span",null,{"className":"pl-c","children":"# 5x3 1로 채워진 double 타입 텐서 생성"}],"\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"출력 결과"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":"$undefined"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"출력을 하시면 텐서가 바뀐걸 알수 있습니다."}],"\n",["$","p",null,{"children":["이번엔 ",["$","code",null,{"children":"torch.randn_like","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}],"를 사용해서 기존 x와 같은 형태이면서 무작위 ",["$","code",null,{"children":"float","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 타입의 텐서를 만들어보겠습니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":["x ",["$","span",null,{"className":"pl-k","children":"="}]," torch.randn_like(x, ",["$","span",null,{"className":"pl-v","children":"dtype"}],["$","span",null,{"className":"pl-k","children":"="}],"torch.float) ",["$","span",null,{"className":"pl-c","children":"# x와 같은 형태의 무작위 float 타입 텐서 생성"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x)\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"출력 결과"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":"$undefined"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","h2",null,{"children":"텐서의 크기 연산"}],"\n",["$","p",null,{"children":"마지막으로 텐서의 크기를 연산하는 방법에 대해 알아보겠습니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nx ",["$","span",null,{"className":"pl-k","children":"="}]," torch.rand(",["$","span",null,{"className":"pl-c1","children":"4"}],", ",["$","span",null,{"className":"pl-c1","children":"2"}],") ",["$","span",null,{"className":"pl-c","children":"# 4x2 무작위로 초기화된 텐서 생성"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x.size()) ",["$","span",null,{"className":"pl-c","children":"# 텐서의 크기 출력"}],"\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"출력 결과"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":"$undefined"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","hr",null,{"className":"border-t-4 border-gray-300 mt-10 mb-10","children":"$undefined"}],"\n",["$","h1",null,{"children":"데이터 타입"}],"\n",["$","p",null,{"children":"일부 타입을 사용해 보았지만 이외에도 여러가지 타입이 있습니다."}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"데이터 타입"}],["$","th",null,{"style":{"textAlign":"center"},"children":"dtype"}],["$","th",null,{"style":{"textAlign":"center"},"children":"CPU Tensor"}],["$","th",null,{"style":{"textAlign":"center"},"children":"GPU Tensor"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"32-bit floating point"}],["$","td",null,{"style":{"textAlign":"center"},"children":[["$","code",null,{"children":"torch.float32","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," or ",["$","code",null,{"children":"torch.float","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.FloatTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.cuda.FloatTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"64-bit floating point"}],["$","td",null,{"style":{"textAlign":"center"},"children":[["$","code",null,{"children":"torch.float64","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," or ",["$","code",null,{"children":"torch.double","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.DoubleTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.cuda.DoubleTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"16-bit floating point"}],["$","td",null,{"style":{"textAlign":"center"},"children":[["$","code",null,{"children":"torch.float16","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," or ",["$","code",null,{"children":"torch.half","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.HalfTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.cuda.HalfTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"8-bit integer (unsigned)"}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.uint8","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.ByteTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.cuda.ByteTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"8-bit integer (signed)"}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.int8","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.CharTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.cuda.CharTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"16-bit integer (signed)"}],["$","td",null,{"style":{"textAlign":"center"},"children":[["$","code",null,{"children":"torch.int16","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," or ",["$","code",null,{"children":"torch.short","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.ShortTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.cuda.ShortTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"32-bit integer (signed)"}],["$","td",null,{"style":{"textAlign":"center"},"children":[["$","code",null,{"children":"torch.int32","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," or ",["$","code",null,{"children":"torch.int","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.IntTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.cuda.IntTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"64-bit integer (signed)"}],["$","td",null,{"style":{"textAlign":"center"},"children":[["$","code",null,{"children":"torch.int64","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," or ",["$","code",null,{"children":"torch.long","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.LongTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"torch.cuda.LongTensor","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]}]]}]]}]]}],"\n",["$","p",null,{"children":["이러한 타입은 ",["$","code",null,{"children":"torch.dtype","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}],"을 사용해서 확인할수 있습니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nit ",["$","span",null,{"className":"pl-k","children":"="}]," torch.tensor([",["$","span",null,{"className":"pl-c1","children":"1"}],", ",["$","span",null,{"className":"pl-c1","children":"2"}],", ",["$","span",null,{"className":"pl-c1","children":"3"}],", ",["$","span",null,{"className":"pl-c1","children":"4"}],"])\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(it.dtype) ",["$","span",null,{"className":"pl-c","children":"# torch.int64"}],"\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"출력 결과"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":"$undefined"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","h2",null,{"children":"타입 캐스팅"}],"\n",["$","p",null,{"children":"이러한 텐서들은 타입을 캐스팅 할수 있습니다. 텐서에 간단한 메서드만 사용하면 됩니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nx ",["$","span",null,{"className":"pl-k","children":"="}]," torch.tensor([",["$","span",null,{"className":"pl-c1","children":"1"}],", ",["$","span",null,{"className":"pl-c1","children":"2"}],", ",["$","span",null,{"className":"pl-c1","children":"3"}],", ",["$","span",null,{"className":"pl-c1","children":"4"}],"])\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x.dtype) ",["$","span",null,{"className":"pl-c","children":"# torch.int64"}],"\n\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x.float().dtype) ",["$","span",null,{"className":"pl-c","children":"# torch.float32"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x.double().dtype) ",["$","span",null,{"className":"pl-c","children":"# torch.float64"}],"\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","hr",null,{"className":"border-t-4 border-gray-300 mt-10 mb-10","children":"$undefined"}],"\n",["$","h1",null,{"children":"CUDA Tensors"}],"\n",["$","p",null,{"children":"다음으론 쿠다 텐서 입니다. 파이토치는 기본적으로 GPU를 활용할수 있는 형태고 또 이를 위한 라이브러리라 할수 있기 때문에 어쩌면 가장 많이 사용하게 될겁니다."}],"\n",["$","p",null,{"children":["Nvidia에서 제공하는 CUDA 라이브러리를 사용 하게 됩니다. 결과적으로 CUDA 에서 사용하는 텐서의 형태로 옮길수 있습니다. 그 반대도 가능합니다. 이는 ",["$","code",null,{"children":".to","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 메서드를 사용하면 됩니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\ndevice ",["$","span",null,{"className":"pl-k","children":"="}]," torch.device(",["$","span",null,{"className":"pl-s","children":[["$","span",null,{"className":"pl-pds","children":"\""}],"cuda",["$","span",null,{"className":"pl-pds","children":"\""}]]}]," ",["$","span",null,{"className":"pl-k","children":"if"}]," torch.cuda.is_available() ",["$","span",null,{"className":"pl-k","children":"else"}]," ",["$","span",null,{"className":"pl-s","children":[["$","span",null,{"className":"pl-pds","children":"\""}],"cpu",["$","span",null,{"className":"pl-pds","children":"\""}]]}],")\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(device)\n\nx ",["$","span",null,{"className":"pl-k","children":"="}]," torch.rand(",["$","span",null,{"className":"pl-c1","children":"4"}],", ",["$","span",null,{"className":"pl-c1","children":"2"}],")\ny ",["$","span",null,{"className":"pl-k","children":"="}]," torch.ones_like(x, ",["$","span",null,{"className":"pl-v","children":"device"}],["$","span",null,{"className":"pl-k","children":"="}],"device)\nx ",["$","span",null,{"className":"pl-k","children":"="}]," x.to(device)\nz ",["$","span",null,{"className":"pl-k","children":"="}]," x ",["$","span",null,{"className":"pl-k","children":"+"}]," y\n\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(y)\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(x)\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(z)\n\nz ",["$","span",null,{"className":"pl-k","children":"="}]," z.to(",["$","span",null,{"className":"pl-s","children":[["$","span",null,{"className":"pl-pds","children":"\""}],"cpu",["$","span",null,{"className":"pl-pds","children":"\""}]]}],", torch.double)\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(z)\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 이 코드는 GPU가 사용가능하면 GPU를 사용하고 그렇지 않으면 CPU를 사용하게 됩니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"torch.cuda.is_available()","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 지금 현재 CUDA가 사용 가능한지 확인하는 코드입니다. 설치는 돼어 있는지 GPU 런타임에 연결이 되어 있는지 간단히 확인할 수 있습니다. 이로서 부득이하게 CUDA가 사용 불가 해도 CPU를 사용할수 있게 됩니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"torch.device()","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 함수는 인자값으로 ",["$","code",null,{"children":"cuda","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 또는 ",["$","code",null,{"children":"cpu","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}],"를 받아서 해당 디바이스를 사용하게 됩니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"y = torch.ones_like(x, device=device)","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 이 코드는 x와 같은 형태의 1로 채워진 텐서를 만들어서 device로 옮기는 코드입니다. 이전 장에서 설치를 제대로 했다면 GPU로 옮겨지게 됩니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"x.to(device)","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 이 코드는 x를 device로 옮기는 코드입니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"z = x + y","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 이 코드는 x와 y를 더한 값을 z에 넣는 코드입니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"z = z.to(\"cpu\", torch.double)","className":"overflow-x-auto bg-gray-200 rounded-md px-1 undefined"}]," 이 코드는 z를 cpu로 옮기고 double 타입으로 바꾸는 코드입니다."]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"출력 결과"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":"$undefined"}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"결과적으로 cuda에 텐서가 잘 선언 된것을 알 수 있습니다. 더한 값도 잘 나온것을 알 수 있습니다. 이로서 텐서를 GPU든 CPU든 자유롭게 오고 갈수 있게 됩니다."}],"\n",["$","h2",null,{"children":"다차원 텐서"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"0차원 텐서"}]}],"\n",["$","p",null,{"children":"0차원 텐서, 스칼라 라고도 하며 값이 하나이면서 shape와 rank가 없는 텐서입니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nt0 ",["$","span",null,{"className":"pl-k","children":"="}]," torch.tensor(",["$","span",null,{"className":"pl-c1","children":"42"}],")\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(t0.ndim) ",["$","span",null,{"className":"pl-c","children":"# 차원정보 출력, 0"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(t0.shape) ",["$","span",null,{"className":"pl-c","children":"# torch.Size([])"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(t0) ",["$","span",null,{"className":"pl-c","children":"# tensor(42)"}],"\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"1차원 텐서"}]}],"\n",["$","p",null,{"children":"1차원 텐서, 벡터 라고도 하며 값이 여러개이면서 shape는 (n,) rank는 1인 텐서입니다. 자료구조를 안다면 간단히 리스트라 봐도 무방한 형태입니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nt1 ",["$","span",null,{"className":"pl-k","children":"="}]," torch.tensor([",["$","span",null,{"className":"pl-c1","children":"1"}],", ",["$","span",null,{"className":"pl-c1","children":"2"}],", ",["$","span",null,{"className":"pl-c1","children":"3"}],", ",["$","span",null,{"className":"pl-c1","children":"4"}],", ",["$","span",null,{"className":"pl-c1","children":"5"}],"])\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(t1.ndim) ",["$","span",null,{"className":"pl-c","children":"# 차원정보 출력, 1"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(t1.shape) ",["$","span",null,{"className":"pl-c","children":"# torch.Size([5])"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(t1) ",["$","span",null,{"className":"pl-c","children":"# tensor([1, 2, 3, 4, 5])"}],"\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"2차원 텐서"}]}],"\n",["$","p",null,{"children":"2차원 텐서, 행렬 라고도 하며 값이 여러개이면서 shape는 (n, m) rank는 2인 텐서입니다. 일반적인 수치, 통계 데이터셋이 이 형태를 가지고 있습니다."}],"\n",["$","p",null,{"children":"TODO: 사진 필요"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-gray-200 rounded-md px-1 language-python","children":[["$","span",null,{"className":"pl-k","children":"import"}]," torch\n\nt2 ",["$","span",null,{"className":"pl-k","children":"="}]," torch.tensor([[",["$","span",null,{"className":"pl-c1","children":"1"}],", ",["$","span",null,{"className":"pl-c1","children":"2"}],", ",["$","span",null,{"className":"pl-c1","children":"3"}],"], [",["$","span",null,{"className":"pl-c1","children":"4"}],", ",["$","span",null,{"className":"pl-c1","children":"5"}],", ",["$","span",null,{"className":"pl-c1","children":"6"}],"], [",["$","span",null,{"className":"pl-c1","children":"7"}],", ",["$","span",null,{"className":"pl-c1","children":"8"}],", ",["$","span",null,{"className":"pl-c1","children":"9"}],"]])\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(t2.ndim) ",["$","span",null,{"className":"pl-c","children":"# 차원정보 출력, 2"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(t2.shape) ",["$","span",null,{"className":"pl-c","children":"# torch.Size([3, 3])"}],"\n",["$","span",null,{"className":"pl-c1","children":"print"}],"(t2) ",["$","span",null,{"className":"pl-c","children":"# tensor([[1, 2, 3], [4, 5, 6], [7, 8, 9]])"}],"\n"]}],"className":"bg-gray-200 rounded-md px-1 py-2"}],"\n",["$","p",null,{"children":"이렇게 쭉 3차원 11차원 텐서도 만들수 있습니다. 간단히 n차원 텐서가 어떻게 사용돼는지 알아보겠습니다."}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"3차원 텐서"}]}],"\n",["$","p",null,{"children":"큐브와 같은 모양으로 세개의 축이 존재하는 텐서 입니다. 데이터가 연속된 시퀀스 데이터나 시간 축이 포함된 시계열 데이터가 이 형태를 가지고 있습니다. 예를들어 주식 가격 데이터셋, 시간에 따른 질병 발병 데이터 등이 존재 합니다. 주로 샘플(samples), 타임스텝(time steps), 특성(features)으로 구성되어 있습니다."}],"\n",["$","p",null,{"children":"TODO: 사진 필요"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"4차원 텐서"}]}],"\n",["$","p",null,{"children":"컬러 이미지 데이터가 대표적인 사례 입니다. 흑백 이미지는 color에 대한 정보가 빠지기 때문에 3D Tensor 로도 가능 합니다. 주로 샘플(samples), 채널(channels), 높이(height), 너비(width)으로 구성되어 있습니다. 이미지 데이터라면 RGB 채널을 가집니다."}],"\n",["$","p",null,{"children":"TODO: 사진 필요"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"5차원 텐서"}]}],"\n",["$","p",null,{"children":"비디어 데이터가 대표적인 사례 입니다. 이미지가 연달아 있는 구조 이므로 4차원 텐서에 각 frame을 추가한 형태 입니다. 30 frame 라면 초당 30개의 이미지가 들어가 있는 형태와 똑같다 생각해도 됩니다."}],"\n",["$","p",null,{"children":"TODO: 사진 필요 없음"}]]}]}]
