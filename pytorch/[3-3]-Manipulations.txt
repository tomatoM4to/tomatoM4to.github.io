4:"$Sreact.fragment"
5:I[4839,["839","static/chunks/839-ee0b8cfd2b2dd0ab.js","271","static/chunks/app/%5Btheme%5D/%5Bpost%5D/page-96b2f175d909b16b.js"],""]
6:I[2404,["87","static/chunks/0e762574-45ffabdaeed21b00.js","839","static/chunks/839-ee0b8cfd2b2dd0ab.js","177","static/chunks/app/layout-99a62564e3117795.js"],"DarkModeButton"]
7:I[5244,[],""]
8:I[3866,[],""]
b:I[6213,[],"OutletBoundary"]
d:I[6213,[],"MetadataBoundary"]
f:I[6213,[],"ViewportBoundary"]
11:I[4835,[],""]
1:HL["/_next/static/media/7626ed2c039b2726-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:HL["/_next/static/media/a34f9d1faa5f3315-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
3:HL["/_next/static/css/a18af851ce58a3b2.css","style"]
0:{"P":null,"b":"JuDz9gXrWSrJrH-VpEr8R","p":"","c":["","pytorch","%5B3-3%5D-Manipulations"],"i":false,"f":[[["",{"children":[["theme","pytorch","d"],{"children":[["post","%5B3-3%5D-Manipulations","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$4","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/a18af851ce58a3b2.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ko","children":["$","body",null,{"className":"__className_9b822d\n                min-h-screen\n                bg-slate-50 text-slate-900 dark:bg-slate-900 dark:text-slate-50","children":["$","div",null,{"className":"grid grid-cols-[24rem_1fr] auto-rows-auto","children":[["$","nav",null,{"className":"\n        __className_92d895\n        z-20\n        text-xl h-12 md:h-14 md:text-2xl\n        bg-slate-50/30 dark:bg-slate-900/30 border-b-slate-300 dark:border-b-slate-600\n        backdrop-blur-md\n        w-full\n        flex\n        items-center\n        justify-between\n        pl-5\n        pr-5\n        mb-20\n        border-b-2\n        border-b-slate-300\n        fixed","children":[["$","$L5",null,{"href":"/","children":"tomatoM4to's blog"}],["$","div",null,{"className":"hidden lg:flex items-center","children":[["$","input",null,{"type":"text","className":"w-36 h-7 rounded-full border-2 border-black pl-2","placeholder":"search"}],["$","div",null,{"className":"bg-slate-300 h-10 w-0.5 ml-2"}],["$","$L5",null,{"href":"https://github.com/tomatoM4to/tomatoM4to.github.io","className":"p-2 rounded-full hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors duration-300","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 16 16","className":"text-2xl cursor-pointer","children":["$undefined",[["$","path","0",{"fillRule":"evenodd","clipRule":"evenodd","d":"M7.976 0A7.977 7.977 0 0 0 0 7.976c0 3.522 2.3 6.507 5.431 7.584.392.049.538-.196.538-.392v-1.37c-2.201.49-2.69-1.076-2.69-1.076-.343-.93-.881-1.175-.881-1.175-.734-.489.048-.489.048-.489.783.049 1.224.832 1.224.832.734 1.223 1.859.88 2.3.685.048-.538.293-.88.489-1.076-1.762-.196-3.621-.881-3.621-3.964 0-.88.293-1.566.832-2.153-.05-.147-.343-.978.098-2.055 0 0 .685-.196 2.201.832.636-.196 1.322-.245 2.007-.245s1.37.098 2.006.245c1.517-1.027 2.202-.832 2.202-.832.44 1.077.146 1.908.097 2.104a3.16 3.16 0 0 1 .832 2.153c0 3.083-1.86 3.719-3.62 3.915.293.244.538.733.538 1.467v2.202c0 .196.146.44.538.392A7.984 7.984 0 0 0 16 7.976C15.951 3.572 12.38 0 7.976 0z","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}],["$","button",null,{"className":"p-2 rounded-full hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors duration-300","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 24 24","className":"text-2xl cursor-pointer","children":["$undefined",[["$","path","0",{"fill":"none","strokeWidth":"2","d":"M12,23 C18.0751322,23 23,18.0751322 23,12 C23,5.92486775 18.0751322,1 12,1 C5.92486775,1 1,5.92486775 1,12 C1,18.0751322 5.92486775,23 12,23 Z M12,23 C15,23 16,18 16,12 C16,6 15,1 12,1 C9,1 8,6 8,12 C8,18 9,23 12,23 Z M2,16 L22,16 M2,8 L22,8","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}],["$","$L6",null,{}]]}]]}],["$","main",null,{"className":"col-span-2","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]]}]}]}]]}],{"children":[["theme","pytorch","d"],["$","$4","c",{"children":[null,"$L9"]}],{"children":[["post","%5B3-3%5D-Manipulations","d"],["$","$4","c",{"children":[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","$0:f:0:1:2:children:0","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$4","c",{"children":["$La",null,["$","$Lb",null,{"children":"$Lc"}]]}],{},null]},null]},null]},null],["$","$4","h",{"children":[null,["$","$4","6lwGYnhP3j4Xvu_GHKh0e",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","$Lf",null,{"children":"$L10"}],["$","meta",null,{"name":"next-size-adjust"}]]}]]}]]],"m":"$undefined","G":["$11","$undefined"],"s":false,"S":true}
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=yes"}]]
e:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"tomatom4to's Computer Science Blog"}],["$","meta","2",{"name":"description","content":"Comprehensive computer science knowledge covering OS, Database, AI, Networks, Linux, and Docker. Learn computer science concepts with clear explanations and practical examples."}],["$","meta","3",{"name":"author","content":"tomatom4to"}],["$","meta","4",{"name":"keywords","content":"Computer Science,Operating Systems,Database,AI,Network,Linux,Docker,Programming,Software Development"}],["$","meta","5",{"name":"creator","content":"tomatom4to"}],["$","meta","6",{"name":"robots","content":"index, follow"}],["$","meta","7",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","8",{"rel":"canonical","href":"https://tomatom4to.github.io"}],["$","meta","9",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","10",{"property":"og:title","content":"tomatom4to's Computer Science Blog"}],["$","meta","11",{"property":"og:description","content":"Your gateway to comprehensive computer science knowledge and practical programming skills"}],["$","meta","12",{"property":"og:url","content":"https://tomatom4to.github.io"}],["$","meta","13",{"property":"og:site_name","content":"tomatom4to's CS Blog"}],["$","meta","14",{"property":"og:locale","content":"ko_KR"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:title","content":"tomatom4to's Computer Science Blog"}],["$","meta","18",{"name":"twitter:description","content":"Your gateway to comprehensive computer science knowledge and practical programming skills"}],["$","link","19",{"rel":"icon","href":"/icon.png?09be0199f64930e1","type":"image/png","sizes":"500x500"}]]
c:null
12:I[9051,["87","static/chunks/0e762574-45ffabdaeed21b00.js","949","static/chunks/578c2090-175257547869ead6.js","206","static/chunks/5e22fd23-a3f66ab797e86fa4.js","585","static/chunks/b563f954-2e58cc71e37cba32.js","711","static/chunks/8e1d74a4-98d5a7d540bb92c7.js","839","static/chunks/839-ee0b8cfd2b2dd0ab.js","859","static/chunks/app/%5Btheme%5D/layout-0c0e2feef1c385d9.js"],"Hamburger"]
13:I[4783,["87","static/chunks/0e762574-45ffabdaeed21b00.js","949","static/chunks/578c2090-175257547869ead6.js","206","static/chunks/5e22fd23-a3f66ab797e86fa4.js","585","static/chunks/b563f954-2e58cc71e37cba32.js","711","static/chunks/8e1d74a4-98d5a7d540bb92c7.js","839","static/chunks/839-ee0b8cfd2b2dd0ab.js","859","static/chunks/app/%5Btheme%5D/layout-0c0e2feef1c385d9.js"],"NonAccordionLink"]
14:I[4783,["87","static/chunks/0e762574-45ffabdaeed21b00.js","949","static/chunks/578c2090-175257547869ead6.js","206","static/chunks/5e22fd23-a3f66ab797e86fa4.js","585","static/chunks/b563f954-2e58cc71e37cba32.js","711","static/chunks/8e1d74a4-98d5a7d540bb92c7.js","839","static/chunks/839-ee0b8cfd2b2dd0ab.js","859","static/chunks/app/%5Btheme%5D/layout-0c0e2feef1c385d9.js"],"Accordion"]
15:I[4783,["87","static/chunks/0e762574-45ffabdaeed21b00.js","949","static/chunks/578c2090-175257547869ead6.js","206","static/chunks/5e22fd23-a3f66ab797e86fa4.js","585","static/chunks/b563f954-2e58cc71e37cba32.js","711","static/chunks/8e1d74a4-98d5a7d540bb92c7.js","839","static/chunks/839-ee0b8cfd2b2dd0ab.js","859","static/chunks/app/%5Btheme%5D/layout-0c0e2feef1c385d9.js"],"AccordionItem"]
9:["$","div",null,{"className":"flex","children":[["$","$L12",null,{"res":[{"title":"Introduction","originalName":"[1]-Introduction","order":1,"contentList":[]},{"title":"Install","originalName":"[2]-Install","order":2,"contentList":[]},{"title":"Tensors","originalName":"[3]-Tensors","order":3,"contentList":[{"isTitle":false,"firstOrder":3,"secondOrder":1,"order":"3-1","title":"Initialzation","originalName":"[3-1]-Initialzation","index":3},{"isTitle":false,"firstOrder":3,"secondOrder":2,"order":"3-2","title":"Operations","originalName":"[3-2]-Operations","index":4},{"isTitle":false,"firstOrder":3,"secondOrder":3,"order":"3-3","title":"Manipulations","originalName":"[3-3]-Manipulations","index":5}]},{"title":"Autograd","originalName":"[4]-Autograd","order":4,"contentList":[{"isTitle":false,"firstOrder":4,"secondOrder":1,"order":"4-1","title":"Operations","originalName":"[4-1]-Operations","index":6},{"isTitle":false,"firstOrder":4,"secondOrder":2,"order":"4-2","title":"Example","originalName":"[4-2]-Example","index":7}]},{"title":"Data preparation","originalName":"[5]-Data-preparation","order":5,"contentList":[]},{"title":"Neural Network","originalName":"[6]-Neural-Network","order":6,"contentList":[{"isTitle":false,"firstOrder":6,"secondOrder":1,"order":"6-1","title":"Layer","originalName":"[6-1]-Layer","index":10},{"isTitle":false,"firstOrder":6,"secondOrder":2,"order":"6-2","title":"Non linear Activation","originalName":"[6-2]-Non-linear-Activation","index":11},{"isTitle":false,"firstOrder":6,"secondOrder":3,"order":"6-3","title":"Model","originalName":"[6-3]-Model","index":12},{"isTitle":false,"firstOrder":6,"secondOrder":4,"order":"6-4","title":"Parameter","originalName":"[6-4]-Parameter","index":13}]}],"params":{"theme":"pytorch"}}],["$","aside",null,{"className":"\n                hidden lg:flex w-64 2xl:w-96\n                border-r-slate-300 dark:border-r-slate-600\n                flex-col\n                h-screen\n                border-r-2\n                p-1\n                pl-5\n                pt-14\n                fixed\n                overflow-y-auto\n                overscroll-contain\n                z-auto\n                ","children":[["$","$L13","0",{"href":"./[1]-Introduction","label":"Introduction"}],["$","$L13","1",{"href":"./[2]-Install","label":"Install"}],["$","$L14","2",{"label":"Tensors","children":["$","$L15",null,{"contentList":"$9:props:children:0:props:res:2:contentList"}]}],["$","$L14","3",{"label":"Autograd","children":["$","$L15",null,{"contentList":"$9:props:children:0:props:res:3:contentList"}]}],["$","$L13","4",{"href":"./[5]-Data-preparation","label":"Data preparation"}],["$","$L14","5",{"label":"Neural Network","children":["$","$L15",null,{"contentList":"$9:props:children:0:props:res:5:contentList"}]}]]}],["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","$0:f:0:1:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}]
a:["$","div",null,{"className":"lg:ml-64 2xl:ml-96 mt-32 mb-32 flex-1 flex flex-col items-center overflow-x-hidden","children":[["$","div",null,{"className":"w-11/12 lg:w-2/3 2xl:w-1/2 markdown-body","children":[["$","h1",null,{"children":"조작(Manipulations)","className":" text-3xl md:text-4xl font-extrabold my-6 text-transparent bg-clip-text bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500"}],"\n",["$","p",null,{"children":"이전에 텐서를 초기화하고 연산을 하고 이젠 조작을 해보겠습니다. 텐서에 대해 마지막으로 다루는 장입니다."}],"\n",["$","h2",null,{"children":"인덱싱","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":"텐서의 인덱싱은 np 모듈 사용 방법과 유사합니다. 텐서의 인덱싱은 0부터 시작합니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n\nx = torch.tensor([[",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],"], [",["$","span",null,{"className":"hljs-number","children":"4"}],", ",["$","span",null,{"className":"hljs-number","children":"5"}],", ",["$","span",null,{"className":"hljs-number","children":"6"}],"]])\n\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x[",["$","span",null,{"className":"hljs-number","children":"0"}],", ",["$","span",null,{"className":"hljs-number","children":"0"}],"]) ",["$","span",null,{"className":"hljs-comment","children":"# 1"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x[",["$","span",null,{"className":"hljs-number","children":"0"}],", ",["$","span",null,{"className":"hljs-number","children":"1"}],"]) ",["$","span",null,{"className":"hljs-comment","children":"# 2"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x[",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"0"}],"]) ",["$","span",null,{"className":"hljs-comment","children":"# 4"}],"\n"]}]}],"\n",["$","h2",null,{"children":"슬라이싱","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":"열을 슬라이상 하거나 행을 슬라이싱 할 수 있습니다. 그리고 각 원소를 출력하는 방법 입니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n\nx = torch.tensor([[",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],"], [",["$","span",null,{"className":"hljs-number","children":"4"}],", ",["$","span",null,{"className":"hljs-number","children":"5"}],", ",["$","span",null,{"className":"hljs-number","children":"6"}],"]])\n\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x[:, ",["$","span",null,{"className":"hljs-number","children":"0"}],"]) ",["$","span",null,{"className":"hljs-comment","children":"# 1, 4"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x[:, ",["$","span",null,{"className":"hljs-number","children":"1"}],"]) ",["$","span",null,{"className":"hljs-comment","children":"# 2, 5"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x[:, ",["$","span",null,{"className":"hljs-number","children":"2"}],"]) ",["$","span",null,{"className":"hljs-comment","children":"# 3, 6"}],"\n\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x[",["$","span",null,{"className":"hljs-number","children":"0"}],", :]) ",["$","span",null,{"className":"hljs-comment","children":"# 1, 2, 3"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x[",["$","span",null,{"className":"hljs-number","children":"1"}],", :]) ",["$","span",null,{"className":"hljs-comment","children":"# 4, 5, 6"}],"\n"]}]}],"\n",["$","h2",null,{"children":"텐서의 크기나 모양 변경","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":["텐서의 크기나 모양을 변경하는 방법입니다. ",["$","code",null,{"children":"view","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}]," 메서드를 사용합니다. ",["$","code",null,{"children":"view","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"의 메서드를 사용할시 주의할점은 변경전 변경후 텐서 안의 원소의 개수가 유지 되어야 합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n\nx = torch.tensor([[",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],"], [",["$","span",null,{"className":"hljs-number","children":"4"}],", ",["$","span",null,{"className":"hljs-number","children":"5"}],", ",["$","span",null,{"className":"hljs-number","children":"6"}],"]])\n\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x)\n\ny = x.view(",["$","span",null,{"className":"hljs-number","children":"6"}],")\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(y) ",["$","span",null,{"className":"hljs-comment","children":"# 2차원 텐서가 6개의 원소를 가진 1차원 텐서로 변경"}],"\n\nz = x.view(",["$","span",null,{"className":"hljs-number","children":"3"}],", -",["$","span",null,{"className":"hljs-number","children":"1"}],") ",["$","span",null,{"className":"hljs-comment","children":"# 행은 3개로 고정하고 열은 자동으로 맞춰줌"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(z)\n"]}]}],"\n",["$","h2",null,{"children":"item","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":["텐서에 값이 단 하나라도 존재하면 숫자 값을 얻을 수 있습니다. 이때 ",["$","code",null,{"children":"item","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}]," 메서드를 사용합니다. 참고로 ",["$","code",null,{"children":"item","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}]," 메서드는 스칼라 값 하나만 존재 해야 합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n\nx = torch.tensor(",["$","span",null,{"className":"hljs-number","children":"1"}],")\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x.item()) ",["$","span",null,{"className":"hljs-comment","children":"# 1"}],"\n\ny = torch.tensor([",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],"])\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(y.item()) ",["$","span",null,{"className":"hljs-comment","children":"# 에러 발생"}],"\n"]}]}],"\n",["$","h2",null,{"children":"차원 추소","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":"굉장히 많이 사용하는 연산입니다. 이 연산은 차원을 축소 하는 연산입니다. 축소를 할시 남겨진 부분은 제거가 되기에 어떻게 보면 제거 라 봐도 무방합니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n\nx = torch.rand(",["$","span",null,{"className":"hljs-number","children":"3"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],") ",["$","span",null,{"className":"hljs-comment","children":"# 3차원 텐서 생성"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x)\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x.shape) ",["$","span",null,{"className":"hljs-comment","children":"# 3, 3, 3"}],"\n\nt = tensor.squeeze() ",["$","span",null,{"className":"hljs-comment","children":"# 차원이 1인 차원을 제거?"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t) ",["$","span",null,{"className":"hljs-comment","children":"# 모.. 줄어들긴 했네"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t.shape)\n"]}]}],"\n",["$","h2",null,{"children":"차원 증가","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":["차원을 증가시키는 방법입니다. ",["$","code",null,{"children":"unsqueeze","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}]," 메서드를 사용합니다. 이 메서드는 인자로 dim을 정의 해주어야 합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n\nx = torch.tensor([",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],"])\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x)\n\ny = x.unsqueeze(dim = ",["$","span",null,{"className":"hljs-number","children":"0"}],") ",["$","span",null,{"className":"hljs-comment","children":"# 0번째 차원을 기준으로 차원을 늘려줌"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(y)\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(y.shape) ",["$","span",null,{"className":"hljs-comment","children":"# 1, 3"}],"\n\nz = y.unsqueeze(dim = ",["$","span",null,{"className":"hljs-number","children":"2"}],") ",["$","span",null,{"className":"hljs-comment","children":"# 2번째 차원을 기준으로 차원을 늘려줌"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(z)\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(z.shape) ",["$","span",null,{"className":"hljs-comment","children":"# 1, 3, 1"}],"\n"]}]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"OUTPUT"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"tensor([1, 2, 3])\n\ntensor([[1, 2, 3]])\ntorch.Size([1, 3])\n\ntensor([[[1],\n         [2],\n         [3]]])\ntorch.Size([1, 3, 1])\n","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}]}],"\n",["$","h2",null,{"children":"텐서간 결합","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"stack","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}]," 메서드를 사용하면 텐서를 결합할 수 있습니다. 이때 결합할때 차원이 같아야 합니다."]}],"\n",["$","p",null,{"children":"TODO: 차원이 같아야 하는건 학인 해야함"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n\nx = torch.tensor([",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],"])\ny = torch.tensor([",["$","span",null,{"className":"hljs-number","children":"4"}],", ",["$","span",null,{"className":"hljs-number","children":"5"}],", ",["$","span",null,{"className":"hljs-number","children":"6"}],"])\nz = torch.tensor([",["$","span",null,{"className":"hljs-number","children":"7"}],", ",["$","span",null,{"className":"hljs-number","children":"8"}],", ",["$","span",null,{"className":"hljs-number","children":"9"}],"])\n\nt = torch.stack([x, y, z])\n\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t)\n"]}]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"OUTPUT"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":["tensor([[",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],"],\n        [",["$","span",null,{"className":"hljs-number","children":"4"}],", ",["$","span",null,{"className":"hljs-number","children":"5"}],", ",["$","span",null,{"className":"hljs-number","children":"6"}],"],\n        [",["$","span",null,{"className":"hljs-number","children":"7"}],", ",["$","span",null,{"className":"hljs-number","children":"8"}],", ",["$","span",null,{"className":"hljs-number","children":"9"}],"]])\n"]}]}],"\n",["$","p",null,{"children":["또 ",["$","code",null,{"children":"cat","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}]," 라는 메서드를 사용할수 있습니다. ",["$","code",null,{"children":"stack","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"과 듀사하지만 쌓을 차원정보인 ",["$","code",null,{"children":"dim","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"이 존재 해야 합니다. 내부적인 동작으론 해당 차원을 늘려준 후 결합을 합니다."]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"cat","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}]," 은 ",["$","code",null,{"children":"concatenate","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"의 줄임말 입니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n\nx = torch.tensor([",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],"])\ny = torch.tensor([",["$","span",null,{"className":"hljs-number","children":"4"}],", ",["$","span",null,{"className":"hljs-number","children":"5"}],", ",["$","span",null,{"className":"hljs-number","children":"6"}],"])\n\nt = torch.cat([x, y])\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t)\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t.size())\n\nx = torch.tensor([",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],", ",["$","span",null,{"className":"hljs-number","children":"4"}],"])\ny = torch.tensor([",["$","span",null,{"className":"hljs-number","children":"5"}],", ",["$","span",null,{"className":"hljs-number","children":"6"}],", ",["$","span",null,{"className":"hljs-number","children":"7"}],"])\nt = torch.cat([x, y])\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t)\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t.size())\n"]}]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"OUTPUT"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-shell","children":"tensor([1, 2, 3, 4, 5, 6])\ntorch.Size([6])\ntensor([1, 2, 3, 4, 5, 6, 7])\ntorch.Size([7])\n"}]}],"\n",["$","h2",null,{"children":"텐서 분할","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"chunk","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"와 ",["$","code",null,{"children":"split","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}]," 메서드를 사용하면 텐서를 분할할 수 있습니다. ",["$","code",null,{"children":"chunk","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"는 동일한 크기로 텐서를 분할하고 ",["$","code",null,{"children":"split","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"은 지정한 크기로 텐서를 분할합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n\nx = torch.tensor([\n    [",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],", ",["$","span",null,{"className":"hljs-number","children":"4"}],", ",["$","span",null,{"className":"hljs-number","children":"5"}],", ",["$","span",null,{"className":"hljs-number","children":"6"}],"],\n    [",["$","span",null,{"className":"hljs-number","children":"7"}],", ",["$","span",null,{"className":"hljs-number","children":"8"}],", ",["$","span",null,{"className":"hljs-number","children":"9"}],", ",["$","span",null,{"className":"hljs-number","children":"10"}],", ",["$","span",null,{"className":"hljs-number","children":"11"}],", ",["$","span",null,{"className":"hljs-number","children":"12"}],"],\n    [",["$","span",null,{"className":"hljs-number","children":"13"}],", ",["$","span",null,{"className":"hljs-number","children":"14"}],", ",["$","span",null,{"className":"hljs-number","children":"15"}],", ",["$","span",null,{"className":"hljs-number","children":"16"}],", ",["$","span",null,{"className":"hljs-number","children":"17"}],", ",["$","span",null,{"className":"hljs-number","children":"18"}],"]\n])\n\nt1, t2, t3 = torch.chunk(x, ",["$","span",null,{"className":"hljs-number","children":"3"}],", dim=",["$","span",null,{"className":"hljs-number","children":"1"}],") ",["$","span",null,{"className":"hljs-comment","children":"# x 를 3개로 나눠주는데 두번째 차원 기준으로 나눠줌"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t1)\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t2)\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t3)\n"]}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"spli","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"은 ",["$","code",null,{"children":"chunk","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"와 동일한 기능이지만, 나눌때 어떤 방식인지 차이가 있습니다. ",["$","code",null,{"children":"chunk","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"는 몇개로 누눌거냐, ",["$","code",null,{"children":"split","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"은 누눌 크기를 지정합니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n\nx = torch.tensor([\n    [",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],", ",["$","span",null,{"className":"hljs-number","children":"4"}],", ",["$","span",null,{"className":"hljs-number","children":"5"}],", ",["$","span",null,{"className":"hljs-number","children":"6"}],"],\n    [",["$","span",null,{"className":"hljs-number","children":"7"}],", ",["$","span",null,{"className":"hljs-number","children":"8"}],", ",["$","span",null,{"className":"hljs-number","children":"9"}],", ",["$","span",null,{"className":"hljs-number","children":"10"}],", ",["$","span",null,{"className":"hljs-number","children":"11"}],", ",["$","span",null,{"className":"hljs-number","children":"12"}],"],\n    [",["$","span",null,{"className":"hljs-number","children":"13"}],", ",["$","span",null,{"className":"hljs-number","children":"14"}],", ",["$","span",null,{"className":"hljs-number","children":"15"}],", ",["$","span",null,{"className":"hljs-number","children":"16"}],", ",["$","span",null,{"className":"hljs-number","children":"17"}],", ",["$","span",null,{"className":"hljs-number","children":"18"}],"]\n])\n\nt1, t2 = torch.split(x, ",["$","span",null,{"className":"hljs-number","children":"3"}],", dim=",["$","span",null,{"className":"hljs-number","children":"1"}],") ",["$","span",null,{"className":"hljs-comment","children":"# 두번째 인자로 텐서의 크기가 몇인지 지정"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t1)\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(t2)\n"]}]}],"\n",["$","h2",null,{"children":"torch to numpy, numpy to torch","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":"이전에 torch 자체가 numpy와 굉장히 유사한 라이브러리라 했습니다. 그래서 기능상 토치의 값을 numpy로 변환하거나 numpy 값을 토치로 변환하는 기능이 있습니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n",["$","span",null,{"className":"hljs-keyword","children":"import"}]," numpy ",["$","span",null,{"className":"hljs-keyword","children":"as"}]," np\n\nx = torch.tensor([",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],"])\ny = x.numpy()\n\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x)\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(y)\n\ny.add_(",["$","span",null,{"className":"hljs-number","children":"1"}],") ",["$","span",null,{"className":"hljs-comment","children":"# numpy 값에 1을 더함"}],"\n\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x) ",["$","span",null,{"className":"hljs-comment","children":"# 2, 3, 4"}],"\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(y) ",["$","span",null,{"className":"hljs-comment","children":"# 2, 3, 4"}],"\n"]}]}],"\n",["$","p",null,{"children":"특징중 하나는 토치와 넘파이는 같은 메모리를 공유한다는 점입니다. 그래서 넘파이 값에 연산을 하면 토치 값도 변경됩니다."}],"\n",["$","p",null,{"children":"그 반대도 가능 합니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md hljs language-python","children":[["$","span",null,{"className":"hljs-keyword","children":"import"}]," torch\n",["$","span",null,{"className":"hljs-keyword","children":"import"}]," numpy ",["$","span",null,{"className":"hljs-keyword","children":"as"}]," np\n\nx = np.array([",["$","span",null,{"className":"hljs-number","children":"1"}],", ",["$","span",null,{"className":"hljs-number","children":"2"}],", ",["$","span",null,{"className":"hljs-number","children":"3"}],"])\ny = torch.from_numpy(x)\n\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(x)\n",["$","span",null,{"className":"hljs-built_in","children":"print"}],"(y)\n"]}]}],"\n",["$","p",null,{"children":"주의할 점은 메모리를 공유하는 동작은 CPU에 한해서만 가능합니다. GPU에 올라간 텐서는 별도의 메모리 공간에 존재해 메모리 공유가 불가능합니다."}]]}],["$","div",null,{"className":"flex justify-between items-center w-full mt-8 pt-4 gap-4 border-t-slate-600 border-t-2","children":[["$","$L5",null,{"href":"./[3-2]-Operations","className":"flex gap-2 justify-center items-center text-lg font-medium mx-5 py-4 rounded-lg basis-1/2 hover:bg-slate-700","children":[["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 448 512","children":["$undefined",[["$","path","0",{"d":"M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z","children":[]}]]],"className":"$undefined","style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]," ","Operations"]}],["$","$L5",null,{"href":"./[4-1]-Operations","className":"flex gap-2 justify-center items-center text-lg font-medium py-4 rounded-lg basis-1/2 hover:bg-slate-700","children":["Operations"," ",["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 448 512","children":["$undefined",[["$","path","0",{"d":"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z","children":[]}]]],"className":"$undefined","style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]]}]]}]]}]
