4:"$Sreact.fragment"
5:I[4839,["839","static/chunks/839-ee0b8cfd2b2dd0ab.js","271","static/chunks/app/%5Btheme%5D/%5Bpost%5D/page-65ffec522be16945.js"],""]
6:I[2404,["87","static/chunks/0e762574-45ffabdaeed21b00.js","839","static/chunks/839-ee0b8cfd2b2dd0ab.js","177","static/chunks/app/layout-82cd3edcd60332dc.js"],"DarkModeButton"]
7:I[5244,[],""]
8:I[3866,[],""]
b:I[6213,[],"OutletBoundary"]
d:I[6213,[],"MetadataBoundary"]
f:I[6213,[],"ViewportBoundary"]
11:I[4835,[],""]
1:HL["/_next/static/media/7626ed2c039b2726-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:HL["/_next/static/media/a34f9d1faa5f3315-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
3:HL["/_next/static/css/4e7b48f2d3ddbafb.css","style"]
0:{"P":null,"b":"uohEWgU2z3_jrF-nQP62Y","p":"","c":["","os","%5B7%5D-%EA%B0%80%EC%83%81-%EB%A9%94%EB%AA%A8%EB%A6%AC"],"i":false,"f":[[["",{"children":[["theme","os","d"],{"children":[["post","%5B7%5D-%EA%B0%80%EC%83%81-%EB%A9%94%EB%AA%A8%EB%A6%AC","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$4","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4e7b48f2d3ddbafb.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ko","children":["$","body",null,{"className":"__className_9b822d\n                min-h-screen\n                bg-slate-50 text-slate-900 dark:bg-slate-900 dark:text-slate-50","children":["$","div",null,{"className":"grid grid-cols-[24rem_1fr] auto-rows-auto","children":[["$","nav",null,{"className":"\n        __className_92d895\n        z-20\n        text-xl h-12 md:h-14 md:text-2xl\n        bg-slate-50/30 dark:bg-slate-900/30 border-b-slate-300 dark:border-b-slate-600\n        backdrop-blur-md\n        w-full\n        flex\n        items-center\n        justify-between\n        pl-5\n        pr-5\n        mb-20\n        border-b-2\n        border-b-slate-300\n        fixed","children":[["$","$L5",null,{"href":"/","children":"tomatoM4to's blog"}],["$","div",null,{"className":"hidden lg:flex items-center","children":[["$","input",null,{"type":"text","className":"w-36 h-7 rounded-full border-2 border-black pl-2","placeholder":"search"}],["$","div",null,{"className":"bg-slate-300 h-10 w-0.5 ml-2"}],["$","$L5",null,{"href":"https://github.com/tomatoM4to/tomatoM4to.github.io","className":"p-2 rounded-full hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors duration-300","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 16 16","className":"text-2xl cursor-pointer","children":["$undefined",[["$","path","0",{"fillRule":"evenodd","clipRule":"evenodd","d":"M7.976 0A7.977 7.977 0 0 0 0 7.976c0 3.522 2.3 6.507 5.431 7.584.392.049.538-.196.538-.392v-1.37c-2.201.49-2.69-1.076-2.69-1.076-.343-.93-.881-1.175-.881-1.175-.734-.489.048-.489.048-.489.783.049 1.224.832 1.224.832.734 1.223 1.859.88 2.3.685.048-.538.293-.88.489-1.076-1.762-.196-3.621-.881-3.621-3.964 0-.88.293-1.566.832-2.153-.05-.147-.343-.978.098-2.055 0 0 .685-.196 2.201.832.636-.196 1.322-.245 2.007-.245s1.37.098 2.006.245c1.517-1.027 2.202-.832 2.202-.832.44 1.077.146 1.908.097 2.104a3.16 3.16 0 0 1 .832 2.153c0 3.083-1.86 3.719-3.62 3.915.293.244.538.733.538 1.467v2.202c0 .196.146.44.538.392A7.984 7.984 0 0 0 16 7.976C15.951 3.572 12.38 0 7.976 0z","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}],["$","button",null,{"className":"p-2 rounded-full hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors duration-300","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 24 24","className":"text-2xl cursor-pointer","children":["$undefined",[["$","path","0",{"fill":"none","strokeWidth":"2","d":"M12,23 C18.0751322,23 23,18.0751322 23,12 C23,5.92486775 18.0751322,1 12,1 C5.92486775,1 1,5.92486775 1,12 C1,18.0751322 5.92486775,23 12,23 Z M12,23 C15,23 16,18 16,12 C16,6 15,1 12,1 C9,1 8,6 8,12 C8,18 9,23 12,23 Z M2,16 L22,16 M2,8 L22,8","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}],["$","$L6",null,{}]]}]]}],["$","main",null,{"className":"col-span-2","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]]}]}]}]]}],{"children":[["theme","os","d"],["$","$4","c",{"children":[null,"$L9"]}],{"children":[["post","%5B7%5D-%EA%B0%80%EC%83%81-%EB%A9%94%EB%AA%A8%EB%A6%AC","d"],["$","$4","c",{"children":[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","$0:f:0:1:2:children:0","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$4","c",{"children":["$La",null,["$","$Lb",null,{"children":"$Lc"}]]}],{},null]},null]},null]},null],["$","$4","h",{"children":[null,["$","$4","o7ccX7Tgoe_3SD_sXIczI",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","$Lf",null,{"children":"$L10"}],["$","meta",null,{"name":"next-size-adjust"}]]}]]}]]],"m":"$undefined","G":["$11","$undefined"],"s":false,"S":true}
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
e:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"tomatom4to's Computer Science Blog"}],["$","meta","2",{"name":"description","content":"Comprehensive computer science knowledge covering OS, Database, AI, Networks, Linux, and Docker. Learn computer science concepts with clear explanations and practical examples."}],["$","meta","3",{"name":"author","content":"tomatom4to"}],["$","meta","4",{"name":"keywords","content":"Computer Science,Operating Systems,Database,AI,Network,Linux,Docker,Programming,Software Development"}],["$","meta","5",{"name":"creator","content":"tomatom4to"}],["$","meta","6",{"name":"robots","content":"index, follow"}],["$","meta","7",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","8",{"rel":"canonical","href":"https://tomatom4to.github.io"}],["$","meta","9",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","10",{"property":"og:title","content":"tomatom4to's Computer Science Blog"}],["$","meta","11",{"property":"og:description","content":"Your gateway to comprehensive computer science knowledge and practical programming skills"}],["$","meta","12",{"property":"og:url","content":"https://tomatom4to.github.io"}],["$","meta","13",{"property":"og:site_name","content":"tomatom4to's CS Blog"}],["$","meta","14",{"property":"og:locale","content":"ko_KR"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:title","content":"tomatom4to's Computer Science Blog"}],["$","meta","18",{"name":"twitter:description","content":"Your gateway to comprehensive computer science knowledge and practical programming skills"}],["$","link","19",{"rel":"icon","href":"/icon.png?09be0199f64930e1","type":"image/png","sizes":"500x500"}]]
c:null
12:I[9051,["87","static/chunks/0e762574-45ffabdaeed21b00.js","206","static/chunks/5e22fd23-a3f66ab797e86fa4.js","949","static/chunks/578c2090-175257547869ead6.js","839","static/chunks/839-ee0b8cfd2b2dd0ab.js","977","static/chunks/977-8a72ee1043432389.js","859","static/chunks/app/%5Btheme%5D/layout-f16cf79ce296f3c6.js"],"Hamburger"]
13:I[4783,["87","static/chunks/0e762574-45ffabdaeed21b00.js","206","static/chunks/5e22fd23-a3f66ab797e86fa4.js","949","static/chunks/578c2090-175257547869ead6.js","839","static/chunks/839-ee0b8cfd2b2dd0ab.js","977","static/chunks/977-8a72ee1043432389.js","859","static/chunks/app/%5Btheme%5D/layout-f16cf79ce296f3c6.js"],"NonAccordionLink"]
14:I[4783,["87","static/chunks/0e762574-45ffabdaeed21b00.js","206","static/chunks/5e22fd23-a3f66ab797e86fa4.js","949","static/chunks/578c2090-175257547869ead6.js","839","static/chunks/839-ee0b8cfd2b2dd0ab.js","977","static/chunks/977-8a72ee1043432389.js","859","static/chunks/app/%5Btheme%5D/layout-f16cf79ce296f3c6.js"],"Accordion"]
15:I[4783,["87","static/chunks/0e762574-45ffabdaeed21b00.js","206","static/chunks/5e22fd23-a3f66ab797e86fa4.js","949","static/chunks/578c2090-175257547869ead6.js","839","static/chunks/839-ee0b8cfd2b2dd0ab.js","977","static/chunks/977-8a72ee1043432389.js","859","static/chunks/app/%5Btheme%5D/layout-f16cf79ce296f3c6.js"],"AccordionItem"]
9:["$","div",null,{"className":"flex","children":[["$","$L12",null,{"res":[{"title":"컴퓨터 구조 개요","originalName":"[1]-컴퓨터-구조-개요","order":1,"contentList":[]},{"title":"OS 소개","originalName":"[2]-OS-소개","order":2,"contentList":[]},{"title":"프로세스 관리","originalName":"[3]-프로세스-관리","order":3,"contentList":[{"isTitle":false,"firstOrder":3,"secondOrder":1,"order":"3-1","title":"프로세스 스케줄링","originalName":"[3-1]-프로세스-스케줄링","index":3},{"isTitle":false,"firstOrder":3,"secondOrder":2,"order":"3-2","title":"프로세스 동기화","originalName":"[3-2]-프로세스-동기화","index":4},{"isTitle":false,"firstOrder":3,"secondOrder":3,"order":"3-3","title":"데드락","originalName":"[3-3]-데드락","index":5}]},{"title":"스레드 관리","originalName":"[4]-스레드-관리","order":4,"contentList":[]},{"title":"메모리 소개","originalName":"[5]-메모리-소개","order":5,"contentList":[]},{"title":"메모리 할당","originalName":"[6]-메모리-할당","order":6,"contentList":[]},{"title":"가상 메모리","originalName":"[7]-가상-메모리","order":7,"contentList":[{"isTitle":false,"firstOrder":7,"secondOrder":1,"order":"7-1","title":"페이징","originalName":"[7-1]-페이징","index":9},{"isTitle":false,"firstOrder":7,"secondOrder":3,"order":"7-3","title":"단편화","originalName":"[7-3]-단편화","index":10}]},{"title":"디스크 시스템","originalName":"[8]-디스크-시스템","order":8,"contentList":[]},{"title":"파일 시스템","originalName":"[9]-파일-시스템","order":9,"contentList":[]},{"title":"all in one","originalName":"[10]-all-in-one","order":10,"contentList":[]}]}],["$","aside",null,{"className":"\n                hidden lg:flex w-64 2xl:w-96\n                border-r-slate-300 dark:border-r-slate-600\n                flex-col\n                h-screen\n                border-r-2\n                p-1\n                pl-5\n                pt-14\n                fixed\n                overflow-y-auto\n                overscroll-contain\n                z-auto\n                ","children":[["$","$L13","0",{"href":"./[1]-컴퓨터-구조-개요","label":"컴퓨터 구조 개요"}],["$","$L13","1",{"href":"./[2]-OS-소개","label":"OS 소개"}],["$","$L14","2",{"label":"프로세스 관리","children":["$","$L15",null,{"contentList":"$9:props:children:0:props:res:2:contentList"}]}],["$","$L13","3",{"href":"./[4]-스레드-관리","label":"스레드 관리"}],["$","$L13","4",{"href":"./[5]-메모리-소개","label":"메모리 소개"}],["$","$L13","5",{"href":"./[6]-메모리-할당","label":"메모리 할당"}],["$","$L14","6",{"label":"가상 메모리","children":["$","$L15",null,{"contentList":"$9:props:children:0:props:res:6:contentList"}]}],["$","$L13","7",{"href":"./[8]-디스크-시스템","label":"디스크 시스템"}],["$","$L13","8",{"href":"./[9]-파일-시스템","label":"파일 시스템"}],["$","$L13","9",{"href":"./[10]-all-in-one","label":"all in one"}]]}],["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","$0:f:0:1:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}]
a:["$","div",null,{"className":"lg:ml-64 2xl:ml-96 mt-32 mb-32 flex-1 flex flex-col items-center overflow-x-hidden","children":[["$","div",null,{"className":"w-11/12 lg:w-2/3 2xl:w-1/2 markdown-body","children":[["$","h1",null,{"children":"Non-Continuous-Allocation","className":" text-3xl md:text-4xl font-extrabold my-6 text-transparent bg-clip-text bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500"}],"\n",["$","p",null,{"children":["$","img",null,{"src":"./img/virtual-memory/non-continuous-allocation.png","alt":"non-continous-allocation"}]}],"\n",["$","p",null,{"children":"Process가 나누어진 상태에서 Memory에 Allocation 기법을 이야기 한다."}],"\n",["$","p",null,{"children":["사용자 프로그램을 여러개의 block으로 분할하고, ",["$","strong",null,{"children":"실행시 필요한 block들만 Memory에 적재"}]," 하게 된다. 나머지 block들은 swap device에 존재한다. swap device란 그냥 쉽게 disk라고 이해해도 좋다."]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"Address Mapping - Continuous allocation","className":" text-3xl md:text-4xl font-extrabold my-6 text-transparent bg-clip-text bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500"}],"\n",["$","p",null,{"children":["이전 Continuous allocation 에서 Address Mapping을 수행할 시, **Relative address(상대 주소)**와 ",["$","strong",null,{"children":"Relocation(재배치)"}]," 개념이 있었다."]}],"\n",["$","p",null,{"children":["간단히 정리하자면 프로그램의 ",["$","strong",null,{"children":"시작 주소를 0으로 가정한 주소인 Relative address"}]," 와 Memory 할당 후, ",["$","strong",null,{"children":"할당 된 주소(allocation address) 에 따라 주소들을 조정"}],"하는 작업이다."]}],"\n",["$","p",null,{"children":"[1]개요.md 에서 Load time binding 과 Run time binding 에서 Continuous allocation 이 Address Mapping을 어떻게 하는지에 관해 자세히 나와 있다."}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"Address Mapping - Non Continuous Allocation","className":" text-3xl md:text-4xl font-extrabold my-6 text-transparent bg-clip-text bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500"}],"\n",["$","p",null,{"children":"NCA를 생각해보면, 프로그램이 분할 된 후 Memory에 적재돼게 된다. 하지만 프로그래머들은 이를 고려하지 않고 프로그래밍을 하는것이 대부분이다."}],"\n",["$","p",null,{"children":"이를 가능하게 해주는 개념이 바로 Virtual address와 Real address 다."}],"\n",["$","p",null,{"children":"Virtual Address 란, relative address와 비슷한 개념으로, Logical address를 말한다."}],"\n",["$","p",null,{"children":["Logical address란, Process가 할당된 Memory는 실제론 잘려진 상태로 적재 돼어있지만 이를 마치 ",["$","strong",null,{"children":"연속된 Memory 처럼 쓸수 있도록"}]," Memory 할당을 논리적으로 가정한 주소이다."]}],"\n",["$","p",null,{"children":"Real address 또는 Absolute address 또는 Physical address는 실제 Memory에 적재된 주소를 의미한다."}],"\n",["$","p",null,{"children":["즉, NCM에서 Address mapping 이란 ",["$","strong",null,{"children":"Virtual address를 Real address로 바꾸어 주는것"}],"을 이야기 한다."]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"./img/virtual-memory/NCA-address-mapping.png","alt":"non-continous-allocation"}]}],"\n",["$","p",null,{"children":"[TODO: 내가 정리했지만 교수님한테 한 번 물어볼까 싶다.]\n다음을 정리해보면, Processor 가 어떤 Memory를 요청할시, 연속적으로 적재되어 있다고 가정한 Process에서 Virtual Address를 가져온 다음 Address Mapping 작업을 거져 Real Address 로 바꾸어 Memory에 접근하는 그림을 그릴수 있다."}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"Address Mapping 기법 - Block Mapping","className":" text-3xl md:text-4xl font-extrabold my-6 text-transparent bg-clip-text bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500"}],"\n",["$","p",null,{"children":"사용자 프로그램은 block 단위로 분할/관리 돼고 있는데, 이러한 block들을 어떻게 address mapping 하는지 기본적은 개념을 소개하겠다."}],"\n",["$","p",null,{"children":["Block Mapping에서 Virtual address 는 ",["$","strong",null,{"children":"(b , d) 로 구성돼어 있다."}]]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"b:"}]," block number -> block의 번호"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"d:"}]," displacement(offset) in the block -> block의 번호의 시작점으로부터 ",["$","strong",null,{"children":"얼마만큼 떨어져 있는지"}],"에 대한 정보"]}],"\n"],"className":"list-disc ml-12 space-y-2 my-3"}],"\n",["$","p",null,{"children":"TODO"}],"\n",["$","h2",null,{"children":"Block map table","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":"그렇다면 어떻게 Address mapping 정보를 관리 할까? 이는 BMT를 통해 관리하게 된다. 그리고 block이란건 Process 하나를 나누었다고 가정 하는것이기 때문에 Process 마다 존재하게 된다."}],"\n",["$","p",null,{"children":"정리하면 나누어진 Process를 관리하기 위해 Kernel 공간에 한 프로세스마다 하나의 BMT를 가진다."}],"\n",["$","p",null,{"children":["각 block은 번호를 가지고, 해당 block이 Memory에 실제로 올라 갔느냐에 대한 정보인 residence bit이 있다. 올라가 있지 않은 block은 swap device에 존재한다. 그리고 실제로 올라갔다면 ",["$","strong",null,{"children":"어디에 올라가 있느냐"}],"인 real address 가 있다."]}],"\n",["$","div",null,{"children":["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"block number"}],["$","th",null,{"children":"residence bit"}],["$","th",null,{"children":"..."}],["$","th",null,{"children":"real address"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":"0"}],["$","td",null,{}],["$","td",null,{"children":"..."}],["$","td",null,{}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"1"}],["$","td",null,{}],["$","td",null,{"children":"..."}],["$","td",null,{}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"2"}],["$","td",null,{}],["$","td",null,{"children":"..."}],["$","td",null,{}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"..."}],["$","td",null,{}],["$","td",null,{"children":"..."}],["$","td",null,{}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"b"}],["$","td",null,{"children":"1"}],["$","td",null,{"children":"..."}],["$","td",null,{"children":"a"}]]}]]}]]}],"className":" overflow-x-auto mb-8"}],"\n",["$","h2",null,{"children":"예시","className":" text-2xl md:text-3xl font-bold my-5 text-purple-600 hover:text-purple-800 transition-colors duration-200"}],"\n",["$","p",null,{"children":["$","img",null,{"src":"./img/virtual-memory/block-mapping.png","alt":"non-continous-allocation"}]}],"\n",["$","p",null,{"children":"[TODO: Processor가 V-memory에 요청 한다고?]\nBlock Mapping은 이런 순서로 동작하게 된다."}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["어떤 데이터가 필요하면 ",["$","strong",null,{"children":"Process의 BMT에 접근"}],"해 block number에 대한 항목을 찾는다."]}],"\n",["$","li",null,{"children":["Residence bit를 검사한다.","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"Residence bit = 0","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}]," 인 경우, ",["$","strong",null,{"children":"swap device에서 해당 블록을 Memory로 가져 온 후"}],", BMT를 업데이트 한다. 그리고 3-2 를 수행한다."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"Residence bit = 1","className":"overflow-x-auto bg-slate-300 border border-slate-400 dark:bg-slate-600 dark:border-slate-500 px-1 rounded-md "}],"인 경우, BMT에서 b에 대한 real address 값 a를 확인한다."]}],"\n"],"className":"list-decimal ml-12 space-y-2 my-3"}],"\n"]}],"\n",["$","li",null,{"children":"실제 주소인 a + d 를 계산한다."}],"\n",["$","li",null,{"children":"해당 주소를 이용하여 메모리에 접근한다."}],"\n"],"className":"list-decimal ml-12 space-y-2 my-3"}]]}],["$","div",null,{"className":"\n            flex\n            flex-col sm:flex-row\n            justify-between\n            items-center\n            w-full\n            mt-8\n            pt-4\n            border-t-slate-300 dark:border-t-slate-600\n            border-t-2\n            w-11/12 lg:w-2/3 2xl:w-1/2\n        ","children":[["$","div",null,{"className":"basis-1/2"}],["$","div",null,{"className":"basis-1/2"}]]}]]}]
